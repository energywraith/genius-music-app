{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\energ\\\\Documents\\\\GitHub\\\\music-app\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport './App.css';\nimport styled from 'styled-components';\nimport { getSongData } from './services/lyrics';\nimport SearchBar from './components/SearchBar';\nimport SongDetails from './components/SongDetails';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [selectedSongId, setSelectedSongId] = useState(null);\n  const [loadingStatus, setLoadingStatus] = useState(false);\n  const [selectedSongData, setSelectedSongData] = useState(null); // Have you ever had lyrics of a song stuck in your head that you cant recall the name of?\n\n  useEffect(() => {\n    const fetchMyAPI = async () => {\n      if (selectedSongId) {\n        // setLoadingStatus(true)\n        const songData = await getSongData(selectedSongId);\n        setSelectedSongData(songData); // setLoadingStatus(false)\n      }\n    };\n\n    fetchMyAPI();\n  }, [selectedSongId]);\n  return /*#__PURE__*/_jsxDEV(AppContainer, {\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      setSelectedSongId: setSelectedSongId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), loadingStatus ? /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \" LOADING \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(SongDetails, {\n      details: selectedSongData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"uwhVhvcuSGZynrHCjwBbZ8QzwYc=\");\n\n_c = App;\nconst AppContainer = styled.div`\n  padding: 0 1em;\n  margin: 0;\n`;\n_c2 = AppContainer;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"AppContainer\");","map":{"version":3,"sources":["C:/Users/energ/Documents/GitHub/music-app/client/src/App.js"],"names":["useState","useEffect","styled","getSongData","SearchBar","SongDetails","App","selectedSongId","setSelectedSongId","loadingStatus","setLoadingStatus","selectedSongData","setSelectedSongData","fetchMyAPI","songData","AppContainer","div"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SAASC,WAAT,QAA4B,mBAA5B;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCR,QAAQ,CAAC,IAAD,CAApD;AACA,QAAM,CAACS,aAAD,EAAgBC,gBAAhB,IAAoCV,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACW,gBAAD,EAAmBC,mBAAnB,IAA0CZ,QAAQ,CAAC,IAAD,CAAxD,CAHa,CAKb;;AAGAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMY,UAAU,GAAG,YAAY;AAC7B,UAAGN,cAAH,EAAmB;AACjB;AACA,cAAMO,QAAQ,GAAG,MAAMX,WAAW,CAACI,cAAD,CAAlC;AACAK,QAAAA,mBAAmB,CAACE,QAAD,CAAnB,CAHiB,CAIjB;AACD;AACF,KAPD;;AASAD,IAAAA,UAAU;AACX,GAXQ,EAWN,CAACN,cAAD,CAXM,CAAT;AAaA,sBACE,QAAC,YAAD;AAAA,4BACE,QAAC,SAAD;AAAW,MAAA,iBAAiB,EAAEC;AAA9B;AAAA;AAAA;AAAA;AAAA,YADF,EAEGC,aAAa,gBACV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADU,gBAEV,QAAC,WAAD;AAAa,MAAA,OAAO,EAAEE;AAAtB;AAAA;AAAA;AAAA;AAAA,YAJN;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GA9BQL,G;;KAAAA,G;AAgCT,MAAMS,YAAY,GAAGb,MAAM,CAACc,GAAI;AAChC;AACA;AACA,CAHA;MAAMD,Y;AAKN,eAAeT,GAAf","sourcesContent":["import { useState, useEffect } from 'react'\nimport './App.css'\nimport styled from 'styled-components'\n\nimport { getSongData } from './services/lyrics'\nimport SearchBar from './components/SearchBar'\nimport SongDetails from './components/SongDetails'\n\nfunction App() {\n  const [selectedSongId, setSelectedSongId] = useState(null)\n  const [loadingStatus, setLoadingStatus] = useState(false)\n  const [selectedSongData, setSelectedSongData] = useState(null)\n\n  // Have you ever had lyrics of a song stuck in your head that you cant recall the name of?\n\n  \n  useEffect(() => {\n    const fetchMyAPI = async () => {\n      if(selectedSongId) {\n        // setLoadingStatus(true)\n        const songData = await getSongData(selectedSongId)\n        setSelectedSongData(songData)\n        // setLoadingStatus(false)\n      }\n    }\n\n    fetchMyAPI()\n  }, [selectedSongId])\n\n  return (\n    <AppContainer>\n      <SearchBar setSelectedSongId={setSelectedSongId} />\n      {loadingStatus\n        ? <span> LOADING </span>\n        : <SongDetails details={selectedSongData} />\n      }\n    </AppContainer>\n  )\n}\n\nconst AppContainer = styled.div`\n  padding: 0 1em;\n  margin: 0;\n`\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}