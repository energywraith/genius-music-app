{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\energ\\\\Documents\\\\GitHub\\\\music-app\\\\client\\\\src\\\\components\\\\SearchBar\\\\index.js\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchBar = () => {\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Search a song name or lyrics\",\n      value: searchInputValue,\n      onChange: ({\n        target\n      }) => setSearchInputValue(target.value),\n      spellCheck: \"false\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: searchStatusLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \" loading ... \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 15\n      }, this) : searchResultData.songs.length > 0 ? searchResultData.songs.map(song => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => setSelectedSongId(song.result.id),\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: song.result.header_image_thumbnail_url,\n          alt: `thumbnail`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\" \", song.result.full_title, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }, this)]\n      }, song.result.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 19\n      }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \" No results :/ \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleExpanded,\n      children: \" Toggle list \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n};\n\n_c = SearchBar;\nconst Container = styled.div`\n  box-shadow: 0px 0px 1px black;\n  \n  & > input {\n    width: 100%;\n    height: 1em;\n    font-size: 1em;\n    padding: 1em 0.2em;\n    box-sizing: border-box;\n\n    &:focus {\n      outline: none;\n    }\n  }\n\n  & > ul {\n    display: ${props => props.expanded ? 'flex' : 'none'};  /* default flex */\n    flex-direction: column;\n    max-height: 23em;\n    overflow-y: scroll;\n\n    & > li {\n      display: grid;\n      grid-template-columns: auto 1fr;\n      align-items: center;\n      column-gap: 1em;\n      box-shadow: 0px 0px 1px black;\n      padding: 0em;\n      cursor: pointer;\n\n      & > img {\n        height: 5em;\n        width: 5em;\n        object-fit: cover;\n      }\n\n      &:hover {\n        background: rgb(240, 240, 240);\n      }\n    }\n\n    & > div {\n      text-align: center;\n    }\n  }\n\n  position: relative;\n  & button {\n    position: absolute;\n    right: 0;\n    top: 0;\n    height: 2em;\n  }\n`;\n_c2 = Container;\nexport default SearchBar;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SearchBar\");\n$RefreshReg$(_c2, \"Container\");","map":{"version":3,"sources":["C:/Users/energ/Documents/GitHub/music-app/client/src/components/SearchBar/index.js"],"names":["styled","SearchBar","searchInputValue","target","setSearchInputValue","value","searchStatusLoading","searchResultData","songs","length","map","song","setSelectedSongId","result","id","header_image_thumbnail_url","full_title","toggleExpanded","Container","div","props","expanded"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,mBAAnB;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACtB,sBACE,QAAC,SAAD;AAAA,4BACE;AACI,MAAA,WAAW,EAAC,8BADhB;AAEI,MAAA,KAAK,EAAEC,gBAFX;AAGI,MAAA,QAAQ,EAAE,CAAC;AAACC,QAAAA;AAAD,OAAD,KAAcC,mBAAmB,CAACD,MAAM,CAACE,KAAR,CAH/C;AAII,MAAA,UAAU,EAAC;AAJf;AAAA;AAAA;AAAA;AAAA,YADF,eAMI;AAAA,gBACGC,mBAAmB,gBAChB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADgB,GAEhBC,gBAAgB,CAACC,KAAjB,CAAuBC,MAAvB,GAAgC,CAAhC,GACEF,gBAAgB,CAACC,KAAjB,CAAuBE,GAAvB,CAA2BC,IAAI,iBAC7B;AAAyB,QAAA,OAAO,EAAE,MAAMC,iBAAiB,CAACD,IAAI,CAACE,MAAL,CAAYC,EAAb,CAAzD;AAAA,gCACE;AAAK,UAAA,GAAG,EAAEH,IAAI,CAACE,MAAL,CAAYE,0BAAtB;AAAkD,UAAA,GAAG,EAAG;AAAxD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,0BAAQJ,IAAI,CAACE,MAAL,CAAYG,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA,SAASL,IAAI,CAACE,MAAL,CAAYC,EAArB;AAAA;AAAA;AAAA;AAAA,cADF,CADF,gBAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAVR;AAAA;AAAA;AAAA;AAAA,YANJ,eAmBI;AAAQ,MAAA,OAAO,EAAEG,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD,CAxBD;;KAAMhB,S;AA0BN,MAAMiB,SAAS,GAAGlB,MAAM,CAACmB,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAeC,KAAK,IAAIA,KAAK,CAACC,QAAN,GAAiB,MAAjB,GAA0B,MAAO;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CArDA;MAAMH,S;AAuDN,eAAejB,SAAf","sourcesContent":["import styled from \"styled-components\"\r\n\r\nconst SearchBar = () => {\r\n  return (\r\n    <Container>\r\n      <input\r\n          placeholder=\"Search a song name or lyrics\"\r\n          value={searchInputValue}\r\n          onChange={({target}) => setSearchInputValue(target.value)}\r\n          spellCheck=\"false\" />\r\n        <ul>\r\n          {searchStatusLoading\r\n            ? <div> loading ... </div>\r\n            : searchResultData.songs.length > 0\r\n              ? searchResultData.songs.map(song => \r\n                  <li key={song.result.id} onClick={() => setSelectedSongId(song.result.id)}>\r\n                    <img src={song.result.header_image_thumbnail_url} alt={`thumbnail`} />\r\n                    <span> {song.result.full_title} </span>\r\n                  </li>\r\n                )\r\n              : <div> No results :/ </div>\r\n          }\r\n        </ul>\r\n        <button onClick={toggleExpanded}> Toggle list </button>\r\n    </Container>\r\n  )\r\n}\r\n\r\nconst Container = styled.div`\r\n  box-shadow: 0px 0px 1px black;\r\n  \r\n  & > input {\r\n    width: 100%;\r\n    height: 1em;\r\n    font-size: 1em;\r\n    padding: 1em 0.2em;\r\n    box-sizing: border-box;\r\n\r\n    &:focus {\r\n      outline: none;\r\n    }\r\n  }\r\n\r\n  & > ul {\r\n    display: ${props => props.expanded ? 'flex' : 'none'};  /* default flex */\r\n    flex-direction: column;\r\n    max-height: 23em;\r\n    overflow-y: scroll;\r\n\r\n    & > li {\r\n      display: grid;\r\n      grid-template-columns: auto 1fr;\r\n      align-items: center;\r\n      column-gap: 1em;\r\n      box-shadow: 0px 0px 1px black;\r\n      padding: 0em;\r\n      cursor: pointer;\r\n\r\n      & > img {\r\n        height: 5em;\r\n        width: 5em;\r\n        object-fit: cover;\r\n      }\r\n\r\n      &:hover {\r\n        background: rgb(240, 240, 240);\r\n      }\r\n    }\r\n\r\n    & > div {\r\n      text-align: center;\r\n    }\r\n  }\r\n\r\n  position: relative;\r\n  & button {\r\n    position: absolute;\r\n    right: 0;\r\n    top: 0;\r\n    height: 2em;\r\n  }\r\n`\r\n\r\nexport default SearchBar"]},"metadata":{},"sourceType":"module"}