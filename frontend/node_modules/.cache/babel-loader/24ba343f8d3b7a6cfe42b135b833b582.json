{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\energ\\\\Documents\\\\GitHub\\\\music-app\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { Switch, Route, Link } from 'react-router-dom';\nimport { useLocation, useHistory } from 'react-router';\nimport styled from 'styled-components';\nimport GlobalStyles from './GlobalStyles';\nimport './App.css';\nimport { getSongData, getArtistData, getRandomSongs } from './services/lyrics';\nimport Loader from './components/Loader';\nimport SearchBar from './components/SearchBar';\nimport SwitchSection from './components/SwitchSection';\nimport appLogo from './components/Nav/img/appLogo.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [loadingStatus, setLoadingStatus] = useState(false);\n  const [data, setData] = useState(null);\n  const [randomSongs, setRandomSongs] = useState(null);\n  const location = useLocation();\n  const history = useHistory(); // Have you ever had lyrics of a song stuck in your head that you cant recall the name of?\n\n  const fetchData = async (id, type) => {\n    switch (type) {\n      case 'song':\n        return await getSongData(id);\n\n      case 'artist':\n        return await getArtistData(id);\n\n      default:\n        return null;\n    }\n  };\n\n  const handleDataChange = async (id, type) => {\n    history.push(`/${type}/${id}`);\n  };\n\n  useEffect(() => {\n    async function handleFetchData() {\n      setLoadingStatus(true);\n      const [, id, path] = location.pathname.split('/');\n\n      try {\n        setData(await fetchData(path, id));\n      } catch (error) {\n        setData({\n          _type: 'error',\n          content: '404'\n        });\n      }\n\n      setLoadingStatus(false);\n    }\n\n    handleFetchData();\n  }, [location]);\n  useEffect(() => {\n    async function handleFetchData() {\n      try {\n        setRandomSongs(await getRandomSongs(2));\n      } catch (error) {\n        console.log(\"xd\");\n      }\n    }\n\n    handleFetchData();\n  }, []);\n  console.log(randomSongs);\n  return /*#__PURE__*/_jsxDEV(AppContainer, {\n    children: [/*#__PURE__*/_jsxDEV(GlobalStyles, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AppLogo, {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: appLogo,\n          alt: \"scuffed spotify\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), \" Spotifi\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n      setData: handleDataChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), loadingStatus ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }, this) : data && /*#__PURE__*/_jsxDEV(SwitchSection, {\n      data: data,\n      handleSelect: handleDataChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"twgABTvJZuN+xkqVACzczKtJkRo=\", false, function () {\n  return [useLocation, useHistory];\n});\n\n_c = App;\nconst AppContainer = styled.div`\n  padding: 0 1em 1em 1em;\n  margin: 0;\n`;\n_c2 = AppContainer;\nconst AppLogo = styled.nav`\n  width: 100%;\n  padding: 1em 0;\n  cursor: pointer;\n  \n  & > a {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    column-gap: 0.2em;\n    color: white;\n\n    & > img {\n      height: 2em;\n      width: auto;\n    }\n  }\n`;\n_c3 = AppLogo;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"AppContainer\");\n$RefreshReg$(_c3, \"AppLogo\");","map":{"version":3,"sources":["C:/Users/energ/Documents/GitHub/music-app/client/src/App.js"],"names":["useEffect","useState","Switch","Route","Link","useLocation","useHistory","styled","GlobalStyles","getSongData","getArtistData","getRandomSongs","Loader","SearchBar","SwitchSection","appLogo","App","loadingStatus","setLoadingStatus","data","setData","randomSongs","setRandomSongs","location","history","fetchData","id","type","handleDataChange","push","handleFetchData","path","pathname","split","error","_type","content","console","log","AppContainer","div","AppLogo","nav"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react'\nimport { Switch, Route, Link } from 'react-router-dom'\nimport { useLocation, useHistory } from 'react-router'\nimport styled from 'styled-components'\nimport GlobalStyles from './GlobalStyles'\nimport './App.css'\n\nimport { getSongData, getArtistData, getRandomSongs } from './services/lyrics'\n\nimport Loader from './components/Loader'\nimport SearchBar from './components/SearchBar'\nimport SwitchSection from './components/SwitchSection'\n\nimport appLogo from './components/Nav/img/appLogo.png'\n\nfunction App() {\n  const [loadingStatus, setLoadingStatus] = useState(false)\n  const [data, setData] = useState(null)\n  const [randomSongs, setRandomSongs] = useState(null)\n  const location = useLocation()\n  const history = useHistory()\n\n  // Have you ever had lyrics of a song stuck in your head that you cant recall the name of?\n  const fetchData = async (id, type) => {\n    switch(type) {\n      case 'song':\n        return await getSongData(id)\n      case 'artist':\n        return await getArtistData(id)\n      default:\n        return null\n    }\n  }\n\n  const handleDataChange = async (id, type) => {\n    history.push(`/${type}/${id}`)\n  }\n\n  useEffect(() => {\n    async function handleFetchData () {\n      setLoadingStatus(true)\n      const [, id, path] = location.pathname.split('/')\n      try {\n        setData(await fetchData(path, id))\n      } catch (error) {\n        setData({ _type: 'error', content: '404' })\n      }\n      setLoadingStatus(false)\n    }\n\n    handleFetchData()\n  }, [location])\n\n  useEffect(() => {\n    async function handleFetchData () {\n      try {\n        setRandomSongs(await getRandomSongs(2))\n      } catch (error) {\n        console.log(\"xd\")\n      }\n    }\n\n    handleFetchData()\n  }, [])\n\n  console.log(randomSongs)\n\n  return (\n    <AppContainer>\n      <GlobalStyles />\n      <AppLogo>\n        <Link to='/'>\n          <img src={appLogo} alt='scuffed spotify' /> Spotifi\n        </Link>\n      </AppLogo>\n      <SearchBar setData={handleDataChange} />\n      <Switch>\n        <Route path='/'>\n          \n        </Route>\n      </Switch>\n      {loadingStatus\n        ? <Loader />\n        : data && <SwitchSection data={data} handleSelect={handleDataChange} />\n      }\n    </AppContainer>\n  )\n}\n\nconst AppContainer = styled.div`\n  padding: 0 1em 1em 1em;\n  margin: 0;\n`\n\nconst AppLogo = styled.nav`\n  width: 100%;\n  padding: 1em 0;\n  cursor: pointer;\n  \n  & > a {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    column-gap: 0.2em;\n    color: white;\n\n    & > img {\n      height: 2em;\n      width: auto;\n    }\n  }\n`\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}