{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\energ\\\\Documents\\\\GitHub\\\\music-app\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport './App.css';\nimport styled from 'styled-components';\nimport { search, getSongData } from './services/lyrics';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [searchResultData, setSearchResultData] = useState({\n    songs: [],\n    artists: [],\n    albums: []\n  });\n  const [searchStatusLoading, setSearchStatusLoading] = useState(false);\n  const [searchInputValue, setSearchInputValue] = useState(\"\");\n  const [selectedSongId, setSelectedSongId] = useState(null);\n  const [selectedSongData, setSelectedSongData] = useState(null); // Have you ever had lyrics of some song that you dont remember the name stuck in your head?\n\n  useEffect(() => {\n    const fetchMyAPI = async () => {\n      if (searchInputValue.length > 0) {\n        setSearchStatusLoading(true);\n        let response = await search(searchInputValue);\n        setSearchResultData(response);\n        setSearchStatusLoading(false);\n      } else {\n        setSearchResultData({\n          songs: [],\n          artists: [],\n          albums: []\n        });\n      }\n    }; // Timeout set to avoid overlapping requests\n\n\n    const timeoutId = setTimeout(() => fetchMyAPI(), 100);\n    return () => clearTimeout(timeoutId);\n  }, [searchInputValue]);\n  useEffect(() => {\n    const fetchMyAPI = async () => {\n      if (selectedSongId) {\n        const songData = await getSongData(selectedSongId);\n        setSelectedSongData(songData);\n      }\n    };\n\n    fetchMyAPI();\n  }, [selectedSongId]);\n  console.log(selectedSongData);\n  return /*#__PURE__*/_jsxDEV(AppContainer, {\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Search a song name or lyrics\",\n        value: searchInputValue,\n        onChange: ({\n          target\n        }) => setSearchInputValue(target.value),\n        spellCheck: \"false\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: searchStatusLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \" loading ... \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this) : searchResultData.songs.length > 0 ? searchResultData.songs.map(song => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => setSelectedSongId(song.result.id),\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: song.result.header_image_thumbnail_url,\n            alt: `thumbnail`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\" \", song.result.full_title, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 21\n          }, this)]\n        }, song.result.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 19\n        }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \" No results :/ \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), selectedSongData && /*#__PURE__*/_jsxDEV(Lyrics, {\n      children: [\" \", selectedSongData.lyrics.replaceAll(\"[\", \"<span>\").replaceAll(\"]\", \"</span>\"), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"/W0p8LqvQ3spxJhVSbmLA2KnF7o=\");\n\n_c = App;\nconst Lyrics = styled.div`\n  white-space: pre-wrap;\n`;\n_c2 = Lyrics;\nconst AppContainer = styled.div`\n  padding: 0;\n  margin: 0;\n`;\n_c3 = AppContainer;\nconst SearchBar = styled.div`\n  & > input {\n    width: 100%;\n    height: 1em;\n    font-size: 1em;\n    padding: 1em 0.2em;\n    box-sizing: border-box;\n\n    &:focus {\n      outline: none;\n\n      /* & ~ ul {\n        display: flex;\n      } */\n    }\n  }\n\n  & > ul {\n    display: flex;  /* default flex */\n    flex-direction: column;\n    max-height: 23em;\n    overflow-y: scroll;\n    box-shadow: 0px 0px 2px black;\n\n    & > li {\n      display: grid;\n      grid-template-columns: auto 1fr;\n      align-items: center;\n      column-gap: 1em;\n      box-shadow: 0px 0px 1px black;\n      padding: 1em;\n      cursor: pointer;\n\n      & > img {\n        height: 3em;\n        width: 3em;\n      }\n    }\n\n    & > div {\n      text-align: center;\n    }\n  }\n`;\n_c4 = SearchBar;\nexport default App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Lyrics\");\n$RefreshReg$(_c3, \"AppContainer\");\n$RefreshReg$(_c4, \"SearchBar\");","map":{"version":3,"sources":["C:/Users/energ/Documents/GitHub/music-app/client/src/App.js"],"names":["useState","useEffect","styled","search","getSongData","App","searchResultData","setSearchResultData","songs","artists","albums","searchStatusLoading","setSearchStatusLoading","searchInputValue","setSearchInputValue","selectedSongId","setSelectedSongId","selectedSongData","setSelectedSongData","fetchMyAPI","length","response","timeoutId","setTimeout","clearTimeout","songData","console","log","target","value","map","song","result","id","header_image_thumbnail_url","full_title","lyrics","replaceAll","Lyrics","div","AppContainer","SearchBar"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport './App.css'\nimport styled from 'styled-components'\n\nimport { search, getSongData } from './services/lyrics'\n\nfunction App() {\n  const [searchResultData, setSearchResultData] = useState({ songs: [], artists: [], albums: [] })\n  const [searchStatusLoading, setSearchStatusLoading] = useState(false)\n  const [searchInputValue, setSearchInputValue] = useState(\"\")\n\n  const [selectedSongId, setSelectedSongId] = useState(null)\n  const [selectedSongData, setSelectedSongData] = useState(null)\n\n  // Have you ever had lyrics of some song that you dont remember the name stuck in your head?\n\n  useEffect(() => {\n    const fetchMyAPI = async () => {\n      if(searchInputValue.length > 0) {\n        setSearchStatusLoading(true)\n        let response = await search(searchInputValue)\n\n        setSearchResultData(response)\n        setSearchStatusLoading(false)\n      } else {\n        setSearchResultData({ songs: [], artists: [], albums: [] })\n      }\n    }\n\n    // Timeout set to avoid overlapping requests\n    const timeoutId = setTimeout(() => fetchMyAPI(), 100)\n    return () => clearTimeout(timeoutId)\n  }, [searchInputValue])\n  \n  useEffect(() => {\n    const fetchMyAPI = async () => {\n      if(selectedSongId) {\n        const songData = await getSongData(selectedSongId)\n        setSelectedSongData(songData)\n      }\n    }\n    \n    fetchMyAPI()\n  }, [selectedSongId])\n\n  console.log(selectedSongData)\n\n  return (\n    <AppContainer>\n      <SearchBar>\n        <input\n          placeholder=\"Search a song name or lyrics\"\n          value={searchInputValue}\n          onChange={({target}) => setSearchInputValue(target.value)}\n          spellCheck=\"false\" />\n        <ul>\n          {searchStatusLoading\n            ? <div> loading ... </div>\n            : searchResultData.songs.length > 0\n              ? searchResultData.songs.map(song => \n                  <li key={song.result.id} onClick={() => setSelectedSongId(song.result.id)}>\n                    <img src={song.result.header_image_thumbnail_url} alt={`thumbnail`} />\n                    <span> {song.result.full_title} </span>\n                  </li>\n                )\n              : <div> No results :/ </div>\n          }\n        </ul>\n      </SearchBar>\n      {selectedSongData\n        && <Lyrics> {selectedSongData.lyrics.replaceAll(\"[\", \"<span>\").replaceAll(\"]\", \"</span>\")} </Lyrics>\n      }\n      \n    </AppContainer>\n  )\n}\n\nconst Lyrics = styled.div`\n  white-space: pre-wrap;\n`\n\nconst AppContainer = styled.div`\n  padding: 0;\n  margin: 0;\n`\n\nconst SearchBar = styled.div`\n  & > input {\n    width: 100%;\n    height: 1em;\n    font-size: 1em;\n    padding: 1em 0.2em;\n    box-sizing: border-box;\n\n    &:focus {\n      outline: none;\n\n      /* & ~ ul {\n        display: flex;\n      } */\n    }\n  }\n\n  & > ul {\n    display: flex;  /* default flex */\n    flex-direction: column;\n    max-height: 23em;\n    overflow-y: scroll;\n    box-shadow: 0px 0px 2px black;\n\n    & > li {\n      display: grid;\n      grid-template-columns: auto 1fr;\n      align-items: center;\n      column-gap: 1em;\n      box-shadow: 0px 0px 1px black;\n      padding: 1em;\n      cursor: pointer;\n\n      & > img {\n        height: 3em;\n        width: 3em;\n      }\n    }\n\n    & > div {\n      text-align: center;\n    }\n  }\n`\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}