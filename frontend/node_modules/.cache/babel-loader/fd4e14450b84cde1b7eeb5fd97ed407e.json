{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\energ\\\\Documents\\\\GitHub\\\\music-app\\\\client\\\\src\\\\components\\\\SearchBar\\\\SearchResults.js\";\nimport { ListContainer, ListItem, Thumbnail } from \"./SearchResults.style\";\nimport placeholderImg from './img/placeholder.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ResultsList = ({\n  results,\n  handleSongSelect,\n  expanded\n}) => {\n  return /*#__PURE__*/_jsxDEV(ListContainer, {\n    expanded: expanded,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \" Artists \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), results.artists.length > 0 ? results.artists.slice(0, 2).map(artist => /*#__PURE__*/_jsxDEV(ListItem, {\n      children: [console.log(artist), /*#__PURE__*/_jsxDEV(Thumbnail, {\n        src: artist.result.header_image_url,\n        onError: e => {\n          e.target.onerror = null;\n          e.target.src = placeholderImg;\n        } // Still returns 404 error if img url is invalid !!!\n        ,\n        alt: `thumbnail`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\" \", artist.result.name, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 15\n      }, this)]\n    }, artist.result.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this)) : /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \" No results \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \" Songs \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), results.songs.length > 0 ? results.songs.map(song => /*#__PURE__*/_jsxDEV(ListItem, {\n      onMouseDown: () => handleSongSelect(song.result.id),\n      children: [/*#__PURE__*/_jsxDEV(Thumbnail, {\n        src: song.result.header_image_thumbnail_url,\n        onError: e => {\n          e.target.onerror = null;\n          e.target.src = placeholderImg;\n        } // Still returns 404 error if img url is invalid !!!\n        ,\n        alt: `thumbnail`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\" \", song.result.full_title, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 15\n      }, this)]\n    }, song.result.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)) : /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \" No results \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ResultsList;\nexport default ResultsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResultsList\");","map":{"version":3,"sources":["C:/Users/energ/Documents/GitHub/music-app/client/src/components/SearchBar/SearchResults.js"],"names":["ListContainer","ListItem","Thumbnail","placeholderImg","ResultsList","results","handleSongSelect","expanded","artists","length","slice","map","artist","console","log","result","header_image_url","e","target","onerror","src","name","id","songs","song","header_image_thumbnail_url","full_title"],"mappings":";AAAA,SAASA,aAAT,EAAwBC,QAAxB,EAAkCC,SAAlC,QAAmD,uBAAnD;AACA,OAAOC,cAAP,MAA2B,uBAA3B;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,gBAAX;AAA6BC,EAAAA;AAA7B,CAAD,KAA6C;AAC/D,sBACE,QAAC,aAAD;AAAe,IAAA,QAAQ,EAAEA,QAAzB;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGF,OAAO,CAACG,OAAR,CAAgBC,MAAhB,GAAyB,CAAzB,GACGJ,OAAO,CAACG,OAAR,CAAgBE,KAAhB,CAAsB,CAAtB,EAAyB,CAAzB,EAA4BC,GAA5B,CAAgCC,MAAM,iBACpC,QAAC,QAAD;AAAA,iBACGC,OAAO,CAACC,GAAR,CAAYF,MAAZ,CADH,eAEE,QAAC,SAAD;AACA,QAAA,GAAG,EAAEA,MAAM,CAACG,MAAP,CAAcC,gBADnB;AAEA,QAAA,OAAO,EAAGC,CAAD,IAAM;AAAEA,UAAAA,CAAC,CAACC,MAAF,CAASC,OAAT,GAAmB,IAAnB;AAAyBF,UAAAA,CAAC,CAACC,MAAF,CAASE,GAAT,GAAejB,cAAf;AAA+B,SAFzE,CAE2E;AAF3E;AAGA,QAAA,GAAG,EAAG;AAHN;AAAA;AAAA;AAAA;AAAA,cAFF,eAME;AAAA,wBAAQS,MAAM,CAACG,MAAP,CAAcM,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA,OAAeT,MAAM,CAACG,MAAP,CAAcO,EAA7B;AAAA;AAAA;AAAA;AAAA,YADF,CADH,gBAWG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbN,eAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAfF,EAgBGjB,OAAO,CAACkB,KAAR,CAAcd,MAAd,GAAuB,CAAvB,GACGJ,OAAO,CAACkB,KAAR,CAAcZ,GAAd,CAAkBa,IAAI,iBACpB,QAAC,QAAD;AAA+B,MAAA,WAAW,EAAE,MAAMlB,gBAAgB,CAACkB,IAAI,CAACT,MAAL,CAAYO,EAAb,CAAlE;AAAA,8BACE,QAAC,SAAD;AACA,QAAA,GAAG,EAAEE,IAAI,CAACT,MAAL,CAAYU,0BADjB;AAEA,QAAA,OAAO,EAAGR,CAAD,IAAM;AAAEA,UAAAA,CAAC,CAACC,MAAF,CAASC,OAAT,GAAmB,IAAnB;AAAyBF,UAAAA,CAAC,CAACC,MAAF,CAASE,GAAT,GAAejB,cAAf;AAA+B,SAFzE,CAE2E;AAF3E;AAGA,QAAA,GAAG,EAAG;AAHN;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAA,wBAAQqB,IAAI,CAACT,MAAL,CAAYW,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA,OAAeF,IAAI,CAACT,MAAL,CAAYO,EAA3B;AAAA;AAAA;AAAA;AAAA,YADF,CADH,gBAUG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA1BN;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD,CAhCD;;KAAMlB,W;AAkCN,eAAeA,WAAf","sourcesContent":["import { ListContainer, ListItem, Thumbnail } from \"./SearchResults.style\"\r\nimport placeholderImg from './img/placeholder.png'\r\n\r\nconst ResultsList = ({ results, handleSongSelect, expanded }) => {\r\n  return (\r\n    <ListContainer expanded={expanded}>\r\n      <h2> Artists </h2>\r\n      {results.artists.length > 0\r\n        ? results.artists.slice(0, 2).map(artist => \r\n            <ListItem key={artist.result.id}>\r\n              {console.log(artist)}\r\n              <Thumbnail \r\n              src={artist.result.header_image_url}\r\n              onError={(e)=> { e.target.onerror = null; e.target.src = placeholderImg }} // Still returns 404 error if img url is invalid !!!\r\n              alt={`thumbnail`} />\r\n              <span> {artist.result.name} </span>\r\n            </ListItem>\r\n          )\r\n        : <span> No results </span>\r\n      }\r\n      <h2> Songs </h2>\r\n      {results.songs.length > 0\r\n        ? results.songs.map(song => \r\n            <ListItem key={song.result.id} onMouseDown={() => handleSongSelect(song.result.id)}>\r\n              <Thumbnail \r\n              src={song.result.header_image_thumbnail_url}\r\n              onError={(e)=> { e.target.onerror = null; e.target.src = placeholderImg }} // Still returns 404 error if img url is invalid !!!\r\n              alt={`thumbnail`} />\r\n              <span> {song.result.full_title} </span>\r\n            </ListItem>\r\n          )\r\n        : <span> No results </span>\r\n      }\r\n    </ListContainer>\r\n  )\r\n}\r\n\r\nexport default ResultsList"]},"metadata":{},"sourceType":"module"}