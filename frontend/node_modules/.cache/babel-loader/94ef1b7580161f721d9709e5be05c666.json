{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\energ\\\\Documents\\\\GitHub\\\\music-app\\\\client\\\\src\\\\components\\\\SearchBar\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { search } from '../../services/lyrics';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchBar = ({\n  handleSongSelect\n}) => {\n  _s();\n\n  const [expanded, setExpanded] = useState(false);\n  const [searchResultData, setSearchResultData] = useState({\n    songs: [],\n    artists: [],\n    albums: []\n  });\n  const [searchStatusLoading, setSearchStatusLoading] = useState(false);\n  const [searchInputValue, setSearchInputValue] = useState(\"\");\n  useEffect(() => {\n    const fetchMyAPI = async () => {\n      if (searchInputValue.length > 0) {\n        setSearchStatusLoading(true);\n        let response = await search(searchInputValue);\n        setSearchResultData(response);\n        setSearchStatusLoading(false);\n      } else {\n        setSearchResultData({\n          songs: [],\n          artists: [],\n          albums: []\n        });\n      }\n    }; // Timeout set to avoid overlapping requests\n\n\n    const timeoutId = setTimeout(() => fetchMyAPI(), 100);\n    return () => clearTimeout(timeoutId);\n  }, [searchInputValue]);\n\n  const toggleExpanded = () => {\n    setExpanded(!expanded);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    expanded: expanded,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Search a song name or lyrics\",\n      value: searchInputValue,\n      onChange: ({\n        target\n      }) => setSearchInputValue(target.value),\n      spellCheck: \"false\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: searchStatusLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \" loading ... \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 15\n      }, this) : searchResultData.songs.length > 0 ? searchResultData.songs.map(song => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => handleSongSelect(song.result.id),\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: song.result.header_image_thumbnail_url,\n          alt: `thumbnail`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\" \", song.result.full_title, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, song.result.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 19\n      }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \" No results :/ \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleExpanded,\n      children: \" Toggle list \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SearchBar, \"cR6LryiY9rkuGBAhbSbF5C1bB+4=\");\n\n_c = SearchBar;\nconst Container = styled.div`\n  box-shadow: 0px 0px 1px black;\n  \n  & > input {\n    width: 100%;\n    height: 1em;\n    font-size: 1em;\n    padding: 1em 0.2em;\n    box-sizing: border-box;\n\n    &:focus {\n      outline: none;\n    }\n  }\n\n  & > ul {\n    display: ${props => props.expanded ? 'flex' : 'none'};  /* default flex */\n    flex-direction: column;\n    max-height: 23em;\n    overflow-y: scroll;\n\n    & > li {\n      display: grid;\n      grid-template-columns: auto 1fr;\n      align-items: center;\n      column-gap: 1em;\n      box-shadow: 0px 0px 1px black;\n      padding: 0em;\n      cursor: pointer;\n\n      & > img {\n        height: 5em;\n        width: 5em;\n        object-fit: cover;\n      }\n\n      &:hover {\n        background: rgb(240, 240, 240);\n      }\n    }\n\n    & > div {\n      text-align: center;\n    }\n  }\n\n  position: relative;\n  & button {\n    position: absolute;\n    right: 0;\n    top: 0;\n    height: 2em;\n  }\n`;\n_c2 = Container;\nexport default SearchBar;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SearchBar\");\n$RefreshReg$(_c2, \"Container\");","map":{"version":3,"sources":["C:/Users/energ/Documents/GitHub/music-app/client/src/components/SearchBar/index.js"],"names":["useEffect","useState","styled","search","SearchBar","handleSongSelect","expanded","setExpanded","searchResultData","setSearchResultData","songs","artists","albums","searchStatusLoading","setSearchStatusLoading","searchInputValue","setSearchInputValue","fetchMyAPI","length","response","timeoutId","setTimeout","clearTimeout","toggleExpanded","target","value","map","song","result","id","header_image_thumbnail_url","full_title","Container","div","props"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,MAAT,QAAuB,uBAAvB;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA0B;AAAA;;AAC1C,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,KAAD,CAAxC;AAEA,QAAM,CAACO,gBAAD,EAAmBC,mBAAnB,IAA0CR,QAAQ,CAAC;AAAES,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,OAAO,EAAE,EAAtB;AAA0BC,IAAAA,MAAM,EAAE;AAAlC,GAAD,CAAxD;AACA,QAAM,CAACC,mBAAD,EAAsBC,sBAAtB,IAAgDb,QAAQ,CAAC,KAAD,CAA9D;AACA,QAAM,CAACc,gBAAD,EAAmBC,mBAAnB,IAA0Cf,QAAQ,CAAC,EAAD,CAAxD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMiB,UAAU,GAAG,YAAY;AAC7B,UAAGF,gBAAgB,CAACG,MAAjB,GAA0B,CAA7B,EAAgC;AAC9BJ,QAAAA,sBAAsB,CAAC,IAAD,CAAtB;AACA,YAAIK,QAAQ,GAAG,MAAMhB,MAAM,CAACY,gBAAD,CAA3B;AAEAN,QAAAA,mBAAmB,CAACU,QAAD,CAAnB;AACAL,QAAAA,sBAAsB,CAAC,KAAD,CAAtB;AACD,OAND,MAMO;AACLL,QAAAA,mBAAmB,CAAC;AAAEC,UAAAA,KAAK,EAAE,EAAT;AAAaC,UAAAA,OAAO,EAAE,EAAtB;AAA0BC,UAAAA,MAAM,EAAE;AAAlC,SAAD,CAAnB;AACD;AACF,KAVD,CADc,CAad;;;AACA,UAAMQ,SAAS,GAAGC,UAAU,CAAC,MAAMJ,UAAU,EAAjB,EAAqB,GAArB,CAA5B;AACA,WAAO,MAAMK,YAAY,CAACF,SAAD,CAAzB;AACD,GAhBQ,EAgBN,CAACL,gBAAD,CAhBM,CAAT;;AAkBA,QAAMQ,cAAc,GAAG,MAAM;AAC3BhB,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACD,GAFD;;AAIA,sBACE,QAAC,SAAD;AAAW,IAAA,QAAQ,EAAEA,QAArB;AAAA,4BACE;AACI,MAAA,WAAW,EAAC,8BADhB;AAEI,MAAA,KAAK,EAAES,gBAFX;AAGI,MAAA,QAAQ,EAAE,CAAC;AAACS,QAAAA;AAAD,OAAD,KAAcR,mBAAmB,CAACQ,MAAM,CAACC,KAAR,CAH/C;AAII,MAAA,UAAU,EAAC;AAJf;AAAA;AAAA;AAAA;AAAA,YADF,eAMI;AAAA,gBACGZ,mBAAmB,gBAChB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADgB,GAEhBL,gBAAgB,CAACE,KAAjB,CAAuBQ,MAAvB,GAAgC,CAAhC,GACEV,gBAAgB,CAACE,KAAjB,CAAuBgB,GAAvB,CAA2BC,IAAI,iBAC7B;AAAyB,QAAA,OAAO,EAAE,MAAMtB,gBAAgB,CAACsB,IAAI,CAACC,MAAL,CAAYC,EAAb,CAAxD;AAAA,gCACE;AAAK,UAAA,GAAG,EAAEF,IAAI,CAACC,MAAL,CAAYE,0BAAtB;AAAkD,UAAA,GAAG,EAAG;AAAxD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,0BAAQH,IAAI,CAACC,MAAL,CAAYG,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA,SAASJ,IAAI,CAACC,MAAL,CAAYC,EAArB;AAAA;AAAA;AAAA;AAAA,cADF,CADF,gBAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAVR;AAAA;AAAA;AAAA;AAAA,YANJ,eAmBI;AAAQ,MAAA,OAAO,EAAEN,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD,CApDD;;GAAMnB,S;;KAAAA,S;AAsDN,MAAM4B,SAAS,GAAG9B,MAAM,CAAC+B,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAeC,KAAK,IAAIA,KAAK,CAAC5B,QAAN,GAAiB,MAAjB,GAA0B,MAAO;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CArDA;MAAM0B,S;AAuDN,eAAe5B,SAAf","sourcesContent":["import { useEffect, useState } from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { search } from '../../services/lyrics'\r\n\r\nconst SearchBar = ({ handleSongSelect }) => {\r\n  const [expanded, setExpanded] = useState(false)\r\n  \r\n  const [searchResultData, setSearchResultData] = useState({ songs: [], artists: [], albums: [] })\r\n  const [searchStatusLoading, setSearchStatusLoading] = useState(false)\r\n  const [searchInputValue, setSearchInputValue] = useState(\"\")\r\n\r\n  useEffect(() => {\r\n    const fetchMyAPI = async () => {\r\n      if(searchInputValue.length > 0) {\r\n        setSearchStatusLoading(true)\r\n        let response = await search(searchInputValue)\r\n\r\n        setSearchResultData(response)\r\n        setSearchStatusLoading(false)\r\n      } else {\r\n        setSearchResultData({ songs: [], artists: [], albums: [] })\r\n      }\r\n    }\r\n\r\n    // Timeout set to avoid overlapping requests\r\n    const timeoutId = setTimeout(() => fetchMyAPI(), 100)\r\n    return () => clearTimeout(timeoutId)\r\n  }, [searchInputValue])\r\n\r\n  const toggleExpanded = () => {\r\n    setExpanded(!expanded)\r\n  }\r\n\r\n  return (\r\n    <Container expanded={expanded}>\r\n      <input\r\n          placeholder=\"Search a song name or lyrics\"\r\n          value={searchInputValue}\r\n          onChange={({target}) => setSearchInputValue(target.value)}\r\n          spellCheck=\"false\" />\r\n        <ul>\r\n          {searchStatusLoading\r\n            ? <div> loading ... </div>\r\n            : searchResultData.songs.length > 0\r\n              ? searchResultData.songs.map(song => \r\n                  <li key={song.result.id} onClick={() => handleSongSelect(song.result.id)}>\r\n                    <img src={song.result.header_image_thumbnail_url} alt={`thumbnail`} />\r\n                    <span> {song.result.full_title} </span>\r\n                  </li>\r\n                )\r\n              : <div> No results :/ </div>\r\n          }\r\n        </ul>\r\n        <button onClick={toggleExpanded}> Toggle list </button>\r\n    </Container>\r\n  )\r\n}\r\n\r\nconst Container = styled.div`\r\n  box-shadow: 0px 0px 1px black;\r\n  \r\n  & > input {\r\n    width: 100%;\r\n    height: 1em;\r\n    font-size: 1em;\r\n    padding: 1em 0.2em;\r\n    box-sizing: border-box;\r\n\r\n    &:focus {\r\n      outline: none;\r\n    }\r\n  }\r\n\r\n  & > ul {\r\n    display: ${props => props.expanded ? 'flex' : 'none'};  /* default flex */\r\n    flex-direction: column;\r\n    max-height: 23em;\r\n    overflow-y: scroll;\r\n\r\n    & > li {\r\n      display: grid;\r\n      grid-template-columns: auto 1fr;\r\n      align-items: center;\r\n      column-gap: 1em;\r\n      box-shadow: 0px 0px 1px black;\r\n      padding: 0em;\r\n      cursor: pointer;\r\n\r\n      & > img {\r\n        height: 5em;\r\n        width: 5em;\r\n        object-fit: cover;\r\n      }\r\n\r\n      &:hover {\r\n        background: rgb(240, 240, 240);\r\n      }\r\n    }\r\n\r\n    & > div {\r\n      text-align: center;\r\n    }\r\n  }\r\n\r\n  position: relative;\r\n  & button {\r\n    position: absolute;\r\n    right: 0;\r\n    top: 0;\r\n    height: 2em;\r\n  }\r\n`\r\n\r\nexport default SearchBar"]},"metadata":{},"sourceType":"module"}