{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\energ\\\\Documents\\\\GitHub\\\\music-app\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport './App.css';\nimport styled from 'styled-components';\nimport { search } from './services/lyrics';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [result, setResult] = useState(null);\n  const [searchInputValue, setSearchInputValue] = useState('');\n  useEffect(() => {\n    async function fetchMyAPI() {\n      if (searchInputValue.length > 0) {\n        let response = await search(searchInputValue);\n        setResult(response);\n      }\n    }\n\n    fetchMyAPI();\n  }, [searchInputValue]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: searchInputValue,\n      onChange: ({\n        target\n      }) => setSearchInputValue(target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResultsList, {\n      children: result ? result.map(song => /*#__PURE__*/_jsxDEV(\"li\", {\n        style: {\n          display: \"grid\",\n          gridTemplateColumns: \"1fr auto\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: song.result.header_image_thumbnail_url,\n          alt: `${song.result.full_title} thumbnail`,\n          style: {\n            height: \"3em\",\n            width: \"3em\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }, this), song.result.full_title]\n      }, song.result.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 15\n      }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \" Loading... \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"bVWQ8VcstmBDXsyETuqvkvddggE=\");\n\n_c = App;\nconst ResultsList = styled.ul`\n  display: grid;\n  grid-template-columns: 1fr;\n`;\n_c2 = ResultsList;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"ResultsList\");","map":{"version":3,"sources":["C:/Users/energ/Documents/GitHub/music-app/client/src/App.js"],"names":["useState","useEffect","styled","search","App","result","setResult","searchInputValue","setSearchInputValue","fetchMyAPI","length","response","target","value","map","song","display","gridTemplateColumns","header_image_thumbnail_url","full_title","height","width","id","ResultsList","ul"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SAASC,MAAT,QAAuB,mBAAvB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAACO,gBAAD,EAAmBC,mBAAnB,IAA0CR,QAAQ,CAAC,EAAD,CAAxD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeQ,UAAf,GAA4B;AAC1B,UAAGF,gBAAgB,CAACG,MAAjB,GAA0B,CAA7B,EAAgC;AAC9B,YAAIC,QAAQ,GAAG,MAAMR,MAAM,CAACI,gBAAD,CAA3B;AACAD,QAAAA,SAAS,CAACK,QAAD,CAAT;AACD;AACF;;AAEDF,IAAAA,UAAU;AACX,GATQ,EASN,CAACF,gBAAD,CATM,CAAT;AAWA,sBACE;AAAA,4BACE;AAAO,MAAA,KAAK,EAAEA,gBAAd;AAAgC,MAAA,QAAQ,EAAE,CAAC;AAACK,QAAAA;AAAD,OAAD,KAAcJ,mBAAmB,CAACI,MAAM,CAACC,KAAR;AAA3E;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,WAAD;AAAA,gBACGR,MAAM,GACHA,MAAM,CAACS,GAAP,CAAWC,IAAI,iBACb;AAAyB,QAAA,KAAK,EAAE;AAAEC,UAAAA,OAAO,EAAE,MAAX;AAAmBC,UAAAA,mBAAmB,EAAE;AAAxC,SAAhC;AAAA,gCACE;AAAK,UAAA,GAAG,EAAEF,IAAI,CAACV,MAAL,CAAYa,0BAAtB;AAAkD,UAAA,GAAG,EAAG,GAAEH,IAAI,CAACV,MAAL,CAAYc,UAAW,YAAjF;AAA8F,UAAA,KAAK,EAAE;AAAEC,YAAAA,MAAM,EAAE,KAAV;AAAiBC,YAAAA,KAAK,EAAE;AAAxB;AAArG;AAAA;AAAA;AAAA;AAAA,gBADF,EAEGN,IAAI,CAACV,MAAL,CAAYc,UAFf;AAAA,SAASJ,IAAI,CAACV,MAAL,CAAYiB,EAArB;AAAA;AAAA;AAAA;AAAA,cADF,CADG,gBAOH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AARN;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GA/BQlB,G;;KAAAA,G;AAiCT,MAAMmB,WAAW,GAAGrB,MAAM,CAACsB,EAAG;AAC9B;AACA;AACA,CAHA;MAAMD,W;AAKN,eAAenB,GAAf","sourcesContent":["import { useState, useEffect } from 'react'\nimport './App.css'\nimport styled from 'styled-components'\n\nimport { search } from './services/lyrics'\n\nfunction App() {\n  const [result, setResult] = useState(null)\n  const [searchInputValue, setSearchInputValue] = useState('')\n\n  useEffect(() => {\n    async function fetchMyAPI() {\n      if(searchInputValue.length > 0) {\n        let response = await search(searchInputValue)\n        setResult(response)\n      }\n    }\n\n    fetchMyAPI()\n  }, [searchInputValue])\n\n  return (\n    <div>\n      <input value={searchInputValue} onChange={({target}) => setSearchInputValue(target.value)} />\n      <ResultsList>\n        {result \n          ? result.map(song => \n              <li key={song.result.id} style={{ display: \"grid\", gridTemplateColumns: \"1fr auto\"}}>\n                <img src={song.result.header_image_thumbnail_url} alt={`${song.result.full_title} thumbnail`} style={{ height: \"3em\", width: \"3em\" }} />\n                {song.result.full_title}\n              </li>\n            )\n          : <div> Loading... </div>\n        }\n      </ResultsList>\n    </div>\n  )\n}\n\nconst ResultsList = styled.ul`\n  display: grid;\n  grid-template-columns: 1fr;\n`\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}