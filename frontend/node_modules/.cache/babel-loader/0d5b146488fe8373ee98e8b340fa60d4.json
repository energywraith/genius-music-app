{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\energ\\\\Documents\\\\GitHub\\\\music-app\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport GlobalStyles from './GlobalStyles';\nimport './App.css';\nimport { getSongData } from './services/lyrics';\nimport Loader from './components/Loader';\nimport SearchBar from './components/SearchBar';\nimport SongSection from './components/SongSection';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [selectedSongId, setSelectedSongId] = useState(null);\n  const [loadingStatus, setLoadingStatus] = useState(false);\n  const [selectedSongData, setSelectedSongData] = useState(null); // Have you ever had lyrics of a song stuck in your head that you cant recall the name of?\n\n  useEffect(() => {\n    const fetchMyAPI = async () => {\n      if (selectedSongId) {\n        setLoadingStatus(true);\n        const songData = await getSongData(selectedSongId);\n        setSelectedSongData(songData);\n        setLoadingStatus(false);\n      }\n    };\n\n    fetchMyAPI();\n  }, [selectedSongId]);\n  return /*#__PURE__*/_jsxDEV(AppContainer, {\n    children: [/*#__PURE__*/_jsxDEV(GlobalStyles, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => setSelectedSongData(null),\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        fontSize: '1em',\n        padding: '1em'\n      },\n      children: \" XD \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n      setSelectedSongId: setSelectedSongId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), loadingStatus ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(SongSection, {\n      details: selectedSongData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"uwhVhvcuSGZynrHCjwBbZ8QzwYc=\");\n\n_c = App;\nconst AppContainer = styled.div`\n  padding: 0 1em 1em 1em;\n  margin: 0;\n`;\n_c2 = AppContainer;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"AppContainer\");","map":{"version":3,"sources":["C:/Users/energ/Documents/GitHub/music-app/client/src/App.js"],"names":["useState","useEffect","styled","GlobalStyles","getSongData","Loader","SearchBar","SongSection","App","selectedSongId","setSelectedSongId","loadingStatus","setLoadingStatus","selectedSongData","setSelectedSongData","fetchMyAPI","songData","display","justifyContent","alignItems","fontSize","padding","AppContainer","div"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAO,WAAP;AAEA,SAASC,WAAT,QAA4B,mBAA5B;AAEA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCV,QAAQ,CAAC,IAAD,CAApD;AACA,QAAM,CAACW,aAAD,EAAgBC,gBAAhB,IAAoCZ,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACa,gBAAD,EAAmBC,mBAAnB,IAA0Cd,QAAQ,CAAC,IAAD,CAAxD,CAHa,CAKb;;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMc,UAAU,GAAG,YAAY;AAC7B,UAAGN,cAAH,EAAmB;AACjBG,QAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACA,cAAMI,QAAQ,GAAG,MAAMZ,WAAW,CAACK,cAAD,CAAlC;AACAK,QAAAA,mBAAmB,CAACE,QAAD,CAAnB;AACAJ,QAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACD;AACF,KAPD;;AASAG,IAAAA,UAAU;AACX,GAXQ,EAWN,CAACN,cAAD,CAXM,CAAT;AAaA,sBACE,QAAC,YAAD;AAAA,4BACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,OAAO,EAAE,MAAMK,mBAAmB,CAAC,IAAD,CAAvC;AAA+C,MAAA,KAAK,EAAE;AAAEG,QAAAA,OAAO,EAAE,MAAX;AAAmBC,QAAAA,cAAc,EAAE,QAAnC;AAA6CC,QAAAA,UAAU,EAAE,QAAzD;AAAmEC,QAAAA,QAAQ,EAAE,KAA7E;AAAoFC,QAAAA,OAAO,EAAE;AAA7F,OAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,SAAD;AAAW,MAAA,iBAAiB,EAAEX;AAA9B;AAAA;AAAA;AAAA;AAAA,YAHF,EAIGC,aAAa,gBACV,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADU,gBAEV,QAAC,WAAD;AAAa,MAAA,OAAO,EAAEE;AAAtB;AAAA;AAAA;AAAA;AAAA,YANN;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GA/BQL,G;;KAAAA,G;AAiCT,MAAMc,YAAY,GAAGpB,MAAM,CAACqB,GAAI;AAChC;AACA;AACA,CAHA;MAAMD,Y;AAKN,eAAed,GAAf","sourcesContent":["import { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport GlobalStyles from './GlobalStyles'\nimport './App.css'\n\nimport { getSongData } from './services/lyrics'\n\nimport Loader from './components/Loader'\nimport SearchBar from './components/SearchBar'\nimport SongSection from './components/SongSection'\n\nfunction App() {\n  const [selectedSongId, setSelectedSongId] = useState(null)\n  const [loadingStatus, setLoadingStatus] = useState(false)\n  const [selectedSongData, setSelectedSongData] = useState(null)\n\n  // Have you ever had lyrics of a song stuck in your head that you cant recall the name of?\n\n  useEffect(() => {\n    const fetchMyAPI = async () => {\n      if(selectedSongId) {\n        setLoadingStatus(true)\n        const songData = await getSongData(selectedSongId)\n        setSelectedSongData(songData)\n        setLoadingStatus(false)\n      }\n    }\n\n    fetchMyAPI()\n  }, [selectedSongId])\n\n  return (\n    <AppContainer>\n      <GlobalStyles />\n      <div onClick={() => setSelectedSongData(null)} style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', fontSize: '1em', padding: '1em'}}> XD </div>\n      <SearchBar setSelectedSongId={setSelectedSongId} />\n      {loadingStatus\n        ? <Loader />\n        : <SongSection details={selectedSongData} />\n      }\n    </AppContainer>\n  )\n}\n\nconst AppContainer = styled.div`\n  padding: 0 1em 1em 1em;\n  margin: 0;\n`\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}