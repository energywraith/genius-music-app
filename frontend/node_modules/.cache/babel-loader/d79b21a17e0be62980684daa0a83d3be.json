{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\energ\\\\Documents\\\\GitHub\\\\music-app\\\\client\\\\src\\\\components\\\\SearchBar\\\\ListItem.js\";\nimport { Link } from 'react-router-dom';\nimport { Container, Thumbnail } from './ListItem.style';\nimport placeholderImg from './img/placeholder.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ListItem = ({\n  id,\n  thumbnail,\n  title,\n  handleSelect,\n  type,\n  setExpanded\n}) => {\n  const handleSelectAndFocus = (id, type) => {\n    // handleSelect(id, type)\n    setExpanded(false);\n  }; // event.preventDefault() on 'onMouseDown' prevents 'onBlur' which usually happens before 'onClick' event\n  // by that I can use 'onClick' on that element\n\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    onMouseDown: event => event.preventDefault(),\n    onClick: () => setExpanded(false),\n    children: /*#__PURE__*/_jsxDEV(Link, {\n      to: `/${type}/${id}`,\n      children: [/*#__PURE__*/_jsxDEV(Thumbnail, {\n        src: thumbnail,\n        onError: e => {\n          e.target.onerror = null;\n          e.target.src = placeholderImg;\n        } // Still returns 404 error if img url is invalid !!!\n        ,\n        alt: `thumbnail`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\" \", title, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ListItem;\nexport default ListItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListItem\");","map":{"version":3,"sources":["C:/Users/energ/Documents/GitHub/music-app/client/src/components/SearchBar/ListItem.js"],"names":["Link","Container","Thumbnail","placeholderImg","ListItem","id","thumbnail","title","handleSelect","type","setExpanded","handleSelectAndFocus","event","preventDefault","e","target","onerror","src"],"mappings":";AAAA,SAASA,IAAT,QAAqB,kBAArB;AACA,SAASC,SAAT,EAAoBC,SAApB,QAAqC,kBAArC;AACA,OAAOC,cAAP,MAA2B,uBAA3B;;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,EAAF;AAAMC,EAAAA,SAAN;AAAiBC,EAAAA,KAAjB;AAAwBC,EAAAA,YAAxB;AAAsCC,EAAAA,IAAtC;AAA4CC,EAAAA;AAA5C,CAAD,KAA+D;AAC9E,QAAMC,oBAAoB,GAAG,CAACN,EAAD,EAAKI,IAAL,KAAc;AACzC;AACAC,IAAAA,WAAW,CAAC,KAAD,CAAX;AACD,GAHD,CAD8E,CAM9E;AACA;;;AACA,sBACE,QAAC,SAAD;AAAW,IAAA,WAAW,EAAGE,KAAD,IAAWA,KAAK,CAACC,cAAN,EAAnC;AAA2D,IAAA,OAAO,EAAE,MAAMH,WAAW,CAAC,KAAD,CAArF;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAG,IAAGD,IAAK,IAAGJ,EAAG,EAAzB;AAAA,8BACE,QAAC,SAAD;AACA,QAAA,GAAG,EAAEC,SADL;AAEA,QAAA,OAAO,EAAGQ,CAAD,IAAM;AAAEA,UAAAA,CAAC,CAACC,MAAF,CAASC,OAAT,GAAmB,IAAnB;AAAyBF,UAAAA,CAAC,CAACC,MAAF,CAASE,GAAT,GAAed,cAAf;AAA+B,SAFzE,CAE2E;AAF3E;AAGA,QAAA,GAAG,EAAG;AAHN;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAA,wBAAQI,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAnBD;;KAAMH,Q;AAqBN,eAAeA,QAAf","sourcesContent":["import { Link } from 'react-router-dom';\r\nimport { Container, Thumbnail } from './ListItem.style';\r\nimport placeholderImg from './img/placeholder.png'\r\n\r\nconst ListItem = ({ id, thumbnail, title, handleSelect, type, setExpanded }) => {\r\n  const handleSelectAndFocus = (id, type) => {\r\n    // handleSelect(id, type)\r\n    setExpanded(false)\r\n  }\r\n\r\n  // event.preventDefault() on 'onMouseDown' prevents 'onBlur' which usually happens before 'onClick' event\r\n  // by that I can use 'onClick' on that element\r\n  return (\r\n    <Container onMouseDown={(event) => event.preventDefault()} onClick={() => setExpanded(false)}>\r\n      <Link to={`/${type}/${id}`}>\r\n        <Thumbnail\r\n        src={thumbnail}\r\n        onError={(e)=> { e.target.onerror = null; e.target.src = placeholderImg }} // Still returns 404 error if img url is invalid !!!\r\n        alt={`thumbnail`} />\r\n        <span> {title} </span>\r\n      </Link>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default ListItem"]},"metadata":{},"sourceType":"module"}