{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\energ\\\\Documents\\\\GitHub\\\\music-app\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router';\nimport styled from 'styled-components';\nimport GlobalStyles from './GlobalStyles';\nimport './App.css';\nimport { getSongData, getArtistData } from './services/lyrics';\nimport Loader from './components/Loader';\nimport SearchBar from './components/SearchBar';\nimport SwitchSection from './components/SwitchSection';\nimport appLogo from './components/Nav/img/appLogo.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [loadingStatus, setLoadingStatus] = useState(false);\n  const [data, setData] = useState(null);\n  const location = useLocation(); // Have you ever had lyrics of a song stuck in your head that you cant recall the name of?\n\n  const fetchData = async (id, type) => {\n    switch (type) {\n      case 'song':\n        return await getSongData(id);\n\n      case 'artist':\n        return await getArtistData(id);\n\n      default:\n        return null;\n    }\n  };\n\n  const handleDataChange = async (id, type) => {\n    window.location.pathname = `/${type}/${id}`;\n  };\n\n  useEffect(() => {\n    async function xd(id, type) {\n      console.log(location);\n      setLoadingStatus(true);\n      setData(await fetchData(id, type));\n      setLoadingStatus(false);\n    }\n\n    xd();\n  }, [location]);\n  return /*#__PURE__*/_jsxDEV(AppContainer, {\n    children: [/*#__PURE__*/_jsxDEV(GlobalStyles, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AppLogo, {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: appLogo,\n        alt: \"scuffed spotify\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), \" Spotifi\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n      setData: handleDataChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), loadingStatus ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }, this) : data && /*#__PURE__*/_jsxDEV(SwitchSection, {\n      data: data,\n      handleSelect: handleDataChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"eLL+YlRK6qPZ/5oUwdjdVNHTJPA=\", false, function () {\n  return [useLocation];\n});\n\n_c = App;\nconst AppContainer = styled.div`\n  padding: 0 1em 1em 1em;\n  margin: 0;\n`;\n_c2 = AppContainer;\nconst AppLogo = styled.nav`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 1em 0;\n  cursor: pointer;\n  column-gap: 0.2em;\n\n  & > img {\n    height: 2em;\n    width: auto;\n  }\n`;\n_c3 = AppLogo;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"AppContainer\");\n$RefreshReg$(_c3, \"AppLogo\");","map":{"version":3,"sources":["C:/Users/energ/Documents/GitHub/music-app/client/src/App.js"],"names":["useEffect","useState","useLocation","styled","GlobalStyles","getSongData","getArtistData","Loader","SearchBar","SwitchSection","appLogo","App","loadingStatus","setLoadingStatus","data","setData","location","fetchData","id","type","handleDataChange","window","pathname","xd","console","log","AppContainer","div","AppLogo","nav"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAO,WAAP;AAEA,SAASC,WAAT,EAAsBC,aAAtB,QAA2C,mBAA3C;AAEA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AAEA,OAAOC,OAAP,MAAoB,kCAApB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCZ,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACa,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAMe,QAAQ,GAAGd,WAAW,EAA5B,CAHa,CAKb;;AACA,QAAMe,SAAS,GAAG,OAAOC,EAAP,EAAWC,IAAX,KAAoB;AACpC,YAAOA,IAAP;AACE,WAAK,MAAL;AACE,eAAO,MAAMd,WAAW,CAACa,EAAD,CAAxB;;AACF,WAAK,QAAL;AACE,eAAO,MAAMZ,aAAa,CAACY,EAAD,CAA1B;;AACF;AACE,eAAO,IAAP;AANJ;AAQD,GATD;;AAWA,QAAME,gBAAgB,GAAG,OAAOF,EAAP,EAAWC,IAAX,KAAoB;AAC3CE,IAAAA,MAAM,CAACL,QAAP,CAAgBM,QAAhB,GAA4B,IAAGH,IAAK,IAAGD,EAAG,EAA1C;AACD,GAFD;;AAIAlB,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeuB,EAAf,CAAmBL,EAAnB,EAAuBC,IAAvB,EAA6B;AAC3BK,MAAAA,OAAO,CAACC,GAAR,CAAYT,QAAZ;AACAH,MAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACAE,MAAAA,OAAO,CAAC,MAAME,SAAS,CAACC,EAAD,EAAKC,IAAL,CAAhB,CAAP;AACAN,MAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACD;;AAEDU,IAAAA,EAAE;AACH,GATQ,EASN,CAACP,QAAD,CATM,CAAT;AAWA,sBACE,QAAC,YAAD;AAAA,4BACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,OAAD;AAAA,8BACE;AAAK,QAAA,GAAG,EAAEN,OAAV;AAAmB,QAAA,GAAG,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA,cADF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAKE,QAAC,SAAD;AAAW,MAAA,OAAO,EAAEU;AAApB;AAAA;AAAA;AAAA;AAAA,YALF,EAMGR,aAAa,gBACV,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADU,GAEVE,IAAI,iBAAI,QAAC,aAAD;AAAe,MAAA,IAAI,EAAEA,IAArB;AAA2B,MAAA,YAAY,EAAEM;AAAzC;AAAA;AAAA;AAAA;AAAA,YARd;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GA7CQT,G;UAGUT,W;;;KAHVS,G;AA+CT,MAAMe,YAAY,GAAGvB,MAAM,CAACwB,GAAI;AAChC;AACA;AACA,CAHA;MAAMD,Y;AAKN,MAAME,OAAO,GAAGzB,MAAM,CAAC0B,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAbA;MAAMD,O;AAeN,eAAejB,GAAf","sourcesContent":["import { useEffect, useState } from 'react'\nimport { useLocation } from 'react-router'\nimport styled from 'styled-components'\nimport GlobalStyles from './GlobalStyles'\nimport './App.css'\n\nimport { getSongData, getArtistData } from './services/lyrics'\n\nimport Loader from './components/Loader'\nimport SearchBar from './components/SearchBar'\nimport SwitchSection from './components/SwitchSection'\n\nimport appLogo from './components/Nav/img/appLogo.png'\n\nfunction App() {\n  const [loadingStatus, setLoadingStatus] = useState(false)\n  const [data, setData] = useState(null)\n  const location = useLocation()\n\n  // Have you ever had lyrics of a song stuck in your head that you cant recall the name of?\n  const fetchData = async (id, type) => {\n    switch(type) {\n      case 'song':\n        return await getSongData(id)\n      case 'artist':\n        return await getArtistData(id)\n      default:\n        return null\n    }\n  }\n\n  const handleDataChange = async (id, type) => {\n    window.location.pathname = `/${type}/${id}`\n  }\n\n  useEffect(() => {\n    async function xd (id, type) {\n      console.log(location)\n      setLoadingStatus(true)\n      setData(await fetchData(id, type))\n      setLoadingStatus(false)\n    }\n\n    xd()\n  }, [location])\n\n  return (\n    <AppContainer>\n      <GlobalStyles />\n      <AppLogo>\n        <img src={appLogo} alt='scuffed spotify' /> Spotifi\n      </AppLogo>\n      <SearchBar setData={handleDataChange} />\n      {loadingStatus\n        ? <Loader />\n        : data && <SwitchSection data={data} handleSelect={handleDataChange} />\n      }\n    </AppContainer>\n  )\n}\n\nconst AppContainer = styled.div`\n  padding: 0 1em 1em 1em;\n  margin: 0;\n`\n\nconst AppLogo = styled.nav`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 1em 0;\n  cursor: pointer;\n  column-gap: 0.2em;\n\n  & > img {\n    height: 2em;\n    width: auto;\n  }\n`\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}