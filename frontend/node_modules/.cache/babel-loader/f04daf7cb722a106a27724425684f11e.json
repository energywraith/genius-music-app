{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/energ/Documents/GitHub/music-app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/energ/Documents/GitHub/music-app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/Users/energ/Documents/GitHub/music-app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useEffect}from'react';import{useLocation}from'react-router';import{getSongData,getArtistData,getRandomSongs,getAlbumData}from'../services/lyrics';var useDataResource=function useDataResource(){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),data=_useState2[0],setData=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),randomSongs=_useState4[0],setRandomSongs=_useState4[1];var location=useLocation();// Fetch data according to the type\nvar fetchData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(id,type){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.t0=type;_context.next=_context.t0==='song'?3:_context.t0==='album'?6:_context.t0==='artist'?9:12;break;case 3:_context.next=5;return getSongData(id);case 5:return _context.abrupt(\"return\",_context.sent);case 6:_context.next=8;return getAlbumData(id);case 8:return _context.abrupt(\"return\",_context.sent);case 9:_context.next=11;return getArtistData(id);case 11:return _context.abrupt(\"return\",_context.sent);case 12:return _context.abrupt(\"return\",null);case 13:case\"end\":return _context.stop();}}},_callee);}));return function fetchData(_x,_x2){return _ref.apply(this,arguments);};}();// On first render fetch 2 random songs to display on home page\nuseEffect(function(){var handleFetchData=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.t0=setRandomSongs;_context2.next=4;return getRandomSongs(2);case 4:_context2.t1=_context2.sent;(0,_context2.t0)(_context2.t1);_context2.next=10;break;case 8:_context2.prev=8;_context2.t2=_context2[\"catch\"](0);case 10:case\"end\":return _context2.stop();}}},_callee2,null,[[0,8]]);}));return function handleFetchData(){return _ref2.apply(this,arguments);};}();handleFetchData();},[]);// Everytime location changes tries to fetch the data\nuseEffect(function(){var handleFetchData=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var _location$pathname$sp,_location$pathname$sp2,id,path;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_location$pathname$sp=location.pathname.split('/'),_location$pathname$sp2=_slicedToArray(_location$pathname$sp,3),id=_location$pathname$sp2[1],path=_location$pathname$sp2[2];_context3.prev=1;_context3.t0=setData;_context3.next=5;return fetchData(path,id);case 5:_context3.t1=_context3.sent;(0,_context3.t0)(_context3.t1);_context3.next=12;break;case 9:_context3.prev=9;_context3.t2=_context3[\"catch\"](1);setData({_type:'error',content:'404'});case 12:case\"end\":return _context3.stop();}}},_callee3,null,[[1,9]]);}));return function handleFetchData(){return _ref3.apply(this,arguments);};}();handleFetchData();},[location]);return[data,randomSongs];};export default useDataResource;","map":{"version":3,"sources":["C:/Users/energ/Documents/GitHub/music-app/frontend/src/hooks/useDataResource.js"],"names":["useState","useEffect","useLocation","getSongData","getArtistData","getRandomSongs","getAlbumData","useDataResource","data","setData","randomSongs","setRandomSongs","location","fetchData","id","type","handleFetchData","pathname","split","path","_type","content"],"mappings":"wfAAA,OAASA,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CACA,OAASC,WAAT,KAA4B,cAA5B,CACA,OAASC,WAAT,CAAsBC,aAAtB,CAAqCC,cAArC,CAAqDC,YAArD,KAAyE,oBAAzE,CAEA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAM,CAC5B,cAAwBP,QAAQ,CAAC,IAAD,CAAhC,wCAAOQ,IAAP,eAAaC,OAAb,eACA,eAAsCT,QAAQ,CAAC,IAAD,CAA9C,yCAAOU,WAAP,eAAoBC,cAApB,eACA,GAAMC,CAAAA,QAAQ,CAAGV,WAAW,EAA5B,CAEA;AACA,GAAMW,CAAAA,SAAS,0FAAG,iBAAOC,EAAP,CAAWC,IAAX,8HACTA,IADS,6BAET,MAFS,iBAIT,OAJS,iBAMT,QANS,yCAGCZ,CAAAA,WAAW,CAACW,EAAD,CAHZ,oFAKCR,CAAAA,YAAY,CAACQ,EAAD,CALb,qFAOCV,CAAAA,aAAa,CAACU,EAAD,CAPd,gGASL,IATK,yDAAH,kBAATD,CAAAA,SAAS,gDAAf,CAaA;AACAZ,SAAS,CAAC,UAAM,CACd,GAAMe,CAAAA,eAAe,2FAAG,sKAEpBL,cAFoB,wBAECN,CAAAA,cAAc,CAAC,CAAD,CAFf,4NAAH,kBAAfW,CAAAA,eAAe,2CAArB,CAMAA,eAAe,GAChB,CARQ,CAQN,EARM,CAAT,CAUA;AACAf,SAAS,CAAC,UAAM,CACd,GAAMe,CAAAA,eAAe,2FAAG,uNACDJ,QAAQ,CAACK,QAAT,CAAkBC,KAAlB,CAAwB,GAAxB,CADC,gEACbJ,EADa,2BACTK,IADS,yDAIpBV,OAJoB,wBAINI,CAAAA,SAAS,CAACM,IAAD,CAAOL,EAAP,CAJH,sJAMpBL,OAAO,CAAC,CAAEW,KAAK,CAAE,OAAT,CAAkBC,OAAO,CAAE,KAA3B,CAAD,CAAP,CANoB,sEAAH,kBAAfL,CAAAA,eAAe,2CAArB,CAUAA,eAAe,GAChB,CAZQ,CAYN,CAACJ,QAAD,CAZM,CAAT,CAcA,MAAO,CACLJ,IADK,CACCE,WADD,CAAP,CAGD,CAhDD,CAkDA,cAAeH,CAAAA,eAAf","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport { useLocation } from 'react-router'\r\nimport { getSongData, getArtistData, getRandomSongs, getAlbumData } from '../services/lyrics'\r\n\r\nconst useDataResource = () => {\r\n  const [data, setData] = useState(null)\r\n  const [randomSongs, setRandomSongs] = useState(null)\r\n  const location = useLocation()\r\n\r\n  // Fetch data according to the type\r\n  const fetchData = async (id, type) => {\r\n    switch(type) {\r\n      case 'song':\r\n        return await getSongData(id)\r\n      case 'album':\r\n        return await getAlbumData(id)\r\n      case 'artist':\r\n        return await getArtistData(id)\r\n      default:\r\n        return null\r\n    }\r\n  }\r\n\r\n  // On first render fetch 2 random songs to display on home page\r\n  useEffect(() => {\r\n    const handleFetchData = async () => {\r\n      try {\r\n        setRandomSongs(await getRandomSongs(2))\r\n      } catch (error) {}\r\n    }\r\n    \r\n    handleFetchData()\r\n  }, [])\r\n  \r\n  // Everytime location changes tries to fetch the data\r\n  useEffect(() => {\r\n    const handleFetchData = async () => {\r\n      const [, id, path] = location.pathname.split('/')\r\n\r\n      try {\r\n        setData(await fetchData(path, id))\r\n      } catch (error) {\r\n        setData({ _type: 'error', content: '404' })\r\n      }\r\n    }\r\n\r\n    handleFetchData()\r\n  }, [location])\r\n\r\n  return [\r\n    data, randomSongs\r\n  ]\r\n}\r\n\r\nexport default useDataResource"]},"metadata":{},"sourceType":"module"}