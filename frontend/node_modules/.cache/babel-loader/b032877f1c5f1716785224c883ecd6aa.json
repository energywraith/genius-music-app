{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\energ\\\\Documents\\\\GitHub\\\\music-app\\\\client\\\\src\\\\components\\\\SearchBar\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { search } from '../../services/lyrics';\nimport SearchResults from './SearchResults';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchBar = ({\n  setSelectedSongId\n}) => {\n  _s();\n\n  const [searchInputValue, setSearchInputValue] = useState(\"\");\n  const [loadingStatus, setLoadingStatus] = useState(false);\n  const [results, setResults] = useState({\n    songs: [],\n    artists: [],\n    albums: []\n  });\n  const [expanded, setExpanded] = useState(false);\n  useEffect(() => {\n    const fetchData = async () => {\n      if (searchInputValue.length > 0) {\n        setLoadingStatus(true);\n        let response = await search(searchInputValue);\n        setResults(response);\n        setLoadingStatus(false);\n      } else {\n        setResults({\n          songs: [],\n          artists: [],\n          albums: []\n        });\n      }\n    }; // Timeout set to avoid overlapping requests\n\n\n    const timeoutId = setTimeout(() => fetchData(), 100);\n    return () => clearTimeout(timeoutId);\n  }, [searchInputValue]);\n\n  const toggleExpanded = () => {\n    setExpanded(!expanded);\n  };\n\n  const handleSongSelect = id => {\n    setExpanded(false);\n    setSelectedSongId(id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    onFocus: () => console.log(\"xD\"),\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Search a song name or lyrics\",\n      value: searchInputValue,\n      onChange: ({\n        target\n      }) => setSearchInputValue(target.value),\n      onClick: () => setExpanded(true),\n      spellCheck: \"false\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), loadingStatus ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \" loading ... \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(SearchResults, {\n      results: results,\n      handleSongSelect: handleSongSelect,\n      expanded: expanded\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleExpanded,\n      children: \" Toggle list \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SearchBar, \"dnGKXWxswfS/H01+OuNQYY7oZoM=\");\n\n_c = SearchBar;\nconst Container = styled.div`\n  box-shadow: 0px 0px 1px black;\n  \n  & > input {\n    width: 100%;\n    height: 1em;\n    font-size: 1em;\n    padding: 1em 0.2em;\n    box-sizing: border-box;\n\n    &:focus {\n      outline: none;\n    }\n  }\n\n  position: relative;\n  & button {\n    position: absolute;\n    right: 0;\n    top: 0;\n    height: 2em;\n  }\n`;\n_c2 = Container;\nexport default SearchBar;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SearchBar\");\n$RefreshReg$(_c2, \"Container\");","map":{"version":3,"sources":["C:/Users/energ/Documents/GitHub/music-app/client/src/components/SearchBar/index.js"],"names":["useEffect","useState","styled","search","SearchResults","SearchBar","setSelectedSongId","searchInputValue","setSearchInputValue","loadingStatus","setLoadingStatus","results","setResults","songs","artists","albums","expanded","setExpanded","fetchData","length","response","timeoutId","setTimeout","clearTimeout","toggleExpanded","handleSongSelect","id","console","log","target","value","Container","div"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { search } from '../../services/lyrics'\r\nimport SearchResults from './SearchResults'\r\n\r\nconst SearchBar = ({ setSelectedSongId }) => {\r\n  const [searchInputValue, setSearchInputValue] = useState(\"\")\r\n  const [loadingStatus, setLoadingStatus] = useState(false)\r\n  const [results, setResults] = useState({ songs: [], artists: [], albums: [] })\r\n\r\n  const [expanded, setExpanded] = useState(false)\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      if(searchInputValue.length > 0) {\r\n        setLoadingStatus(true)\r\n        let response = await search(searchInputValue)\r\n\r\n        setResults(response)\r\n        setLoadingStatus(false)\r\n      } else {\r\n        setResults({ songs: [], artists: [], albums: [] })\r\n      }\r\n    }\r\n\r\n    // Timeout set to avoid overlapping requests\r\n    const timeoutId = setTimeout(() => fetchData(), 100)\r\n    return () => clearTimeout(timeoutId)\r\n  }, [searchInputValue])\r\n\r\n  const toggleExpanded = () => {\r\n    setExpanded(!expanded)\r\n  }\r\n\r\n  const handleSongSelect = (id) => {\r\n    setExpanded(false)\r\n    setSelectedSongId(id)\r\n  }\r\n\r\n  return (\r\n    <Container onFocus={() => console.log(\"xD\")}>\r\n      <input\r\n        placeholder=\"Search a song name or lyrics\"\r\n        value={searchInputValue}\r\n        onChange={({target}) => setSearchInputValue(target.value)}\r\n        onClick={() => setExpanded(true)}\r\n        spellCheck=\"false\" />\r\n        {loadingStatus\r\n          ? <div> loading ... </div>\r\n          : <SearchResults results={results} handleSongSelect={handleSongSelect} expanded={expanded} />\r\n        }\r\n      <button onClick={toggleExpanded}> Toggle list </button>\r\n    </Container>\r\n  )\r\n}\r\n\r\nconst Container = styled.div`\r\n  box-shadow: 0px 0px 1px black;\r\n  \r\n  & > input {\r\n    width: 100%;\r\n    height: 1em;\r\n    font-size: 1em;\r\n    padding: 1em 0.2em;\r\n    box-sizing: border-box;\r\n\r\n    &:focus {\r\n      outline: none;\r\n    }\r\n  }\r\n\r\n  position: relative;\r\n  & button {\r\n    position: absolute;\r\n    right: 0;\r\n    top: 0;\r\n    height: 2em;\r\n  }\r\n`\r\n\r\nexport default SearchBar"]},"metadata":{},"sourceType":"module"}