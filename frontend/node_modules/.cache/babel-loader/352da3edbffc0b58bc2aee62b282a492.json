{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\energ\\\\Documents\\\\GitHub\\\\music-app\\\\client\\\\src\\\\components\\\\SongSection\\\\index.js\";\nimport styled from 'styled-components';\nimport Description from './Description';\nimport YoutubeEmbed from './YoutubeEmbed';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SongSection = ({\n  details\n}) => {\n  return details ? /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Name, {\n      children: [\" \", details.full_title, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Lyrics, {\n      dangerouslySetInnerHTML: {\n        __html: details.lyrics.replaceAll(\"[\", \"<span>[\").replaceAll(\"]\", \"]</span>\")\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Details, {\n      children: [/*#__PURE__*/_jsxDEV(CoverImage, {\n        src: details.header_image_url,\n        alt: \"Song cover\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Description, {\n        content: details.description_preview\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(YoutubeEmbed, {\n        url: details.youtube_url\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Links, {\n        children: details.media.map(media => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: media.url,\n            rel: \"noopener noreferrer\",\n            children: media.provider\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 17\n          }, this)\n        }, media.provider, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 7\n  }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \" Select a song \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 7\n  }, this);\n};\n\n_c = SongSection;\nconst Container = styled.section`\n  display: grid;\n  grid-template-columns: auto auto;\n  grid-template-rows: auto 1fr;\n  justify-content: space-between;\n  width: 100%;\n`;\n_c2 = Container;\nconst Name = styled.h2`\n  grid-column: 1/3;\n`;\n_c3 = Name;\nconst Lyrics = styled.div`\n  white-space: pre-wrap;\n  width: fit-content;\n\n  & span {\n    /* color: rgb(240, 240, 240); */\n    font-size: 0.9em;\n  }\n`;\n_c4 = Lyrics;\nconst Details = styled.aside`\n  display: grid;\n  grid-template-columns: auto auto;\n  width: fit-content;\n  height: fit-content;\n  row-gap: 2em;\n`;\n_c5 = Details;\nconst CoverImage = styled.img`\n  height: 10em;\n  width: auto;\n  justify-self: end;\n  grid-area: 1/1;\n`;\n_c6 = CoverImage;\nconst Links = styled.ul`\n\n`;\n_c7 = Links;\nexport default SongSection;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"SongSection\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"Name\");\n$RefreshReg$(_c4, \"Lyrics\");\n$RefreshReg$(_c5, \"Details\");\n$RefreshReg$(_c6, \"CoverImage\");\n$RefreshReg$(_c7, \"Links\");","map":{"version":3,"sources":["C:/Users/energ/Documents/GitHub/music-app/client/src/components/SongSection/index.js"],"names":["styled","Description","YoutubeEmbed","SongSection","details","full_title","__html","lyrics","replaceAll","header_image_url","description_preview","youtube_url","media","map","url","provider","Container","section","Name","h2","Lyrics","div","Details","aside","CoverImage","img","Links","ul"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AACnC,SAAOA,OAAO,gBACV,QAAC,SAAD;AAAA,4BACE,QAAC,IAAD;AAAA,sBAAQA,OAAO,CAACC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AAAQ,MAAA,uBAAuB,EAAE;AAAEC,QAAAA,MAAM,EAAEF,OAAO,CAACG,MAAR,CAAeC,UAAf,CAA0B,GAA1B,EAA+B,SAA/B,EAA0CA,UAA1C,CAAqD,GAArD,EAA0D,UAA1D;AAAV;AAAjC;AAAA;AAAA;AAAA;AAAA,YAFF,eAIE,QAAC,OAAD;AAAA,8BACE,QAAC,UAAD;AAAY,QAAA,GAAG,EAAEJ,OAAO,CAACK,gBAAzB;AAA2C,QAAA,GAAG,EAAC;AAA/C;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,WAAD;AAAa,QAAA,OAAO,EAAEL,OAAO,CAACM;AAA9B;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,YAAD;AAAc,QAAA,GAAG,EAAEN,OAAO,CAACO;AAA3B;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE,QAAC,KAAD;AAAA,kBACGP,OAAO,CAACQ,KAAR,CAAcC,GAAd,CAAkBD,KAAK,iBACtB;AAAA,iCACE;AAAG,YAAA,IAAI,EAAEA,KAAK,CAACE,GAAf;AAAoB,YAAA,GAAG,EAAC,qBAAxB;AAAA,sBACGF,KAAK,CAACG;AADT;AAAA;AAAA;AAAA;AAAA;AADF,WAASH,KAAK,CAACG,QAAf;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADU,gBAoBV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UApBJ;AAsBD,CAvBD;;KAAMZ,W;AAyBN,MAAMa,SAAS,GAAGhB,MAAM,CAACiB,OAAQ;AACjC;AACA;AACA;AACA;AACA;AACA,CANA;MAAMD,S;AAQN,MAAME,IAAI,GAAGlB,MAAM,CAACmB,EAAG;AACvB;AACA,CAFA;MAAMD,I;AAIN,MAAME,MAAM,GAAGpB,MAAM,CAACqB,GAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;MAAMD,M;AAUN,MAAME,OAAO,GAAGtB,MAAM,CAACuB,KAAM;AAC7B;AACA;AACA;AACA;AACA;AACA,CANA;MAAMD,O;AAQN,MAAME,UAAU,GAAGxB,MAAM,CAACyB,GAAI;AAC9B;AACA;AACA;AACA;AACA,CALA;MAAMD,U;AAQN,MAAME,KAAK,GAAG1B,MAAM,CAAC2B,EAAG;AACxB;AACA,CAFA;MAAMD,K;AAIN,eAAevB,WAAf","sourcesContent":["import styled from 'styled-components'\r\nimport Description from './Description'\r\nimport YoutubeEmbed from './YoutubeEmbed'\r\n\r\nconst SongSection = ({ details }) => {\r\n  return details\r\n    ? <Container>\r\n        <Name> {details.full_title} </Name>\r\n        <Lyrics dangerouslySetInnerHTML={{ __html: details.lyrics.replaceAll(\"[\", \"<span>[\").replaceAll(\"]\", \"]</span>\") }} />\r\n\r\n        <Details>\r\n          <CoverImage src={details.header_image_url} alt=\"Song cover\" />\r\n          <Description content={details.description_preview}/>\r\n          <YoutubeEmbed url={details.youtube_url} />\r\n          <Links>\r\n            {details.media.map(media => \r\n              <li key={media.provider}>\r\n                <a href={media.url} rel=\"noopener noreferrer\">\r\n                  {media.provider}\r\n                </a>\r\n              </li>\r\n            )}\r\n          </Links>\r\n        </Details>\r\n      </Container>\r\n    : <h2> Select a song </h2>\r\n  \r\n}\r\n\r\nconst Container = styled.section`\r\n  display: grid;\r\n  grid-template-columns: auto auto;\r\n  grid-template-rows: auto 1fr;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n`\r\n\r\nconst Name = styled.h2`\r\n  grid-column: 1/3;\r\n`\r\n\r\nconst Lyrics = styled.div`\r\n  white-space: pre-wrap;\r\n  width: fit-content;\r\n\r\n  & span {\r\n    /* color: rgb(240, 240, 240); */\r\n    font-size: 0.9em;\r\n  }\r\n`\r\n\r\nconst Details = styled.aside`\r\n  display: grid;\r\n  grid-template-columns: auto auto;\r\n  width: fit-content;\r\n  height: fit-content;\r\n  row-gap: 2em;\r\n`\r\n\r\nconst CoverImage = styled.img`\r\n  height: 10em;\r\n  width: auto;\r\n  justify-self: end;\r\n  grid-area: 1/1;\r\n`\r\n\r\n\r\nconst Links = styled.ul`\r\n\r\n`\r\n\r\nexport default SongSection"]},"metadata":{},"sourceType":"module"}