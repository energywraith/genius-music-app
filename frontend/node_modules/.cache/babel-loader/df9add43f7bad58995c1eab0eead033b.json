{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\energ\\\\Documents\\\\GitHub\\\\music-app\\\\client\\\\src\\\\components\\\\SearchBar\\\\SearchResults.js\";\nimport ListItem from \"./ListItem\";\nimport { ListContainer, Thumbnail } from \"./SearchResults.style\";\nimport placeholderImg from './img/placeholder.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ResultsList = ({\n  results,\n  handleSongSelect,\n  expanded\n}) => {\n  return /*#__PURE__*/_jsxDEV(ListContainer, {\n    expanded: expanded,\n    children: results.songs.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \" Songs \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this), results.songs.map(song => /*#__PURE__*/_jsxDEV(ListItem, {\n        id: song.result.id,\n        thumbnail: song.result.header_image_thumbnail_url,\n        title: song.result.full_title,\n        handleSelect: handleSongSelect\n      }, song.result.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 15\n      }, this))]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ResultsList;\nexport default ResultsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResultsList\");","map":{"version":3,"sources":["C:/Users/energ/Documents/GitHub/music-app/client/src/components/SearchBar/SearchResults.js"],"names":["ListItem","ListContainer","Thumbnail","placeholderImg","ResultsList","results","handleSongSelect","expanded","songs","length","map","song","result","id","header_image_thumbnail_url","full_title"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,YAArB;AAEA,SAASC,aAAT,EAAwBC,SAAxB,QAAyC,uBAAzC;AACA,OAAOC,cAAP,MAA2B,uBAA3B;;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,gBAAX;AAA6BC,EAAAA;AAA7B,CAAD,KAA6C;AAC/D,sBACE,QAAC,aAAD;AAAe,IAAA,QAAQ,EAAEA,QAAzB;AAAA,cAeGF,OAAO,CAACG,KAAR,CAAcC,MAAd,GAAuB,CAAvB,iBAEG;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEGJ,OAAO,CAACG,KAAR,CAAcE,GAAd,CAAkBC,IAAI,iBACrB,QAAC,QAAD;AAEE,QAAA,EAAE,EAAEA,IAAI,CAACC,MAAL,CAAYC,EAFlB;AAGE,QAAA,SAAS,EAAEF,IAAI,CAACC,MAAL,CAAYE,0BAHzB;AAIE,QAAA,KAAK,EAAEH,IAAI,CAACC,MAAL,CAAYG,UAJrB;AAKE,QAAA,YAAY,EAAET;AALhB,SACOK,IAAI,CAACC,MAAL,CAAYC,EADnB;AAAA;AAAA;AAAA;AAAA,cADD,CAFH;AAAA;AAjBN;AAAA;AAAA;AAAA;AAAA,UADF;AAgDD,CAjDD;;KAAMT,W;AAmDN,eAAeA,WAAf","sourcesContent":["import ListItem from \"./ListItem\"\r\n\r\nimport { ListContainer, Thumbnail } from \"./SearchResults.style\"\r\nimport placeholderImg from './img/placeholder.png'\r\n\r\nconst ResultsList = ({ results, handleSongSelect, expanded }) => {\r\n  return (\r\n    <ListContainer expanded={expanded}>\r\n      {/* {results.artists.length > 0\r\n        && <>\r\n          <h2> Artists </h2>\r\n          {results.artists.slice(0, 2).map(artist => \r\n            <ListItem key={artist.result.id}>\r\n              <Thumbnail \r\n              src={artist.result.header_image_url}\r\n              onError={(e)=> { e.target.onerror = null; e.target.src = placeholderImg }} // Still returns 404 error if img url is invalid !!!\r\n              alt={`thumbnail`} />\r\n              <span> {artist.result.name} </span>\r\n            </ListItem>\r\n          )}\r\n        </>\r\n      } */}\r\n      {results.songs.length > 0\r\n        && \r\n          <>\r\n            <h2> Songs </h2>\r\n            {results.songs.map(song => \r\n              <ListItem\r\n                key={song.result.id}\r\n                id={song.result.id}\r\n                thumbnail={song.result.header_image_thumbnail_url}\r\n                title={song.result.full_title}\r\n                handleSelect={handleSongSelect}\r\n              />\r\n            )}\r\n          </>\r\n      }\r\n      {/* <h2> Albums </h2>\r\n      {results.albums.length > 0\r\n        && \r\n          <>\r\n            {results.albums.slice(0, 2).map(album => \r\n              <ListItem key={album.result.id} onMouseDown={() => handleSongSelect(album.result.id)}>\r\n                <Thumbnail\r\n                src={album.result.cover_art_thumbnail_url}\r\n                onError={(e)=> { e.target.onerror = null; e.target.src = placeholderImg }} // Still returns 404 error if img url is invalid !!!\r\n                alt={`thumbnail`} />\r\n                <span> {album.result.full_title} </span>\r\n              </ListItem>\r\n            )}\r\n          </>\r\n      } */}\r\n    </ListContainer>\r\n  )\r\n}\r\n\r\nexport default ResultsList"]},"metadata":{},"sourceType":"module"}