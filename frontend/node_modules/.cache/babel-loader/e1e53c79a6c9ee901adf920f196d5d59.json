{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\energ\\\\Documents\\\\GitHub\\\\music-app\\\\client\\\\src\\\\components\\\\SectionArtist\\\\Album.js\";\nimport { Link } from 'react-router-dom';\nimport { AlbumContainer, AlbumCover, AlbumContent, AlbumName, TracksList, Track } from './Album.style';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Album = ({\n  album,\n  handleSelect\n}) => {\n  console.log(album);\n  return /*#__PURE__*/_jsxDEV(AlbumContainer, {\n    children: [/*#__PURE__*/_jsxDEV(AlbumCover, {\n      src: album.cover_art_url,\n      alt: album.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AlbumContent, {\n      children: [/*#__PURE__*/_jsxDEV(AlbumName, {\n        children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n          to: `/album/${album.id}`,\n          children: [\" \", album.name, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 21\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TracksList, {\n        children: album && album.tracks.map(track => /*#__PURE__*/_jsxDEV(Track, {\n          onClick: () => handleSelect(track.song.id, 'song'),\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/song/${track.song.id}`,\n            children: [\" \", track.song.title, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 15\n          }, this)\n        }, track.song.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)]\n  }, album.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Album;\nexport default Album;\n\nvar _c;\n\n$RefreshReg$(_c, \"Album\");","map":{"version":3,"sources":["C:/Users/energ/Documents/GitHub/music-app/client/src/components/SectionArtist/Album.js"],"names":["Link","AlbumContainer","AlbumCover","AlbumContent","AlbumName","TracksList","Track","Album","album","handleSelect","console","log","cover_art_url","name","id","tracks","map","track","song","title"],"mappings":";AAAA,SAASA,IAAT,QAAqB,kBAArB;AACA,SAASC,cAAT,EAAyBC,UAAzB,EAAqCC,YAArC,EAAmDC,SAAnD,EAA8DC,UAA9D,EAA0EC,KAA1E,QAAuF,eAAvF;;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAA6B;AACzCC,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AAEA,sBACE,QAAC,cAAD;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,GAAG,EAAEA,KAAK,CAACI,aAAvB;AAAsC,MAAA,GAAG,EAAEJ,KAAK,CAACK;AAAjD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,YAAD;AAAA,8BACE,QAAC,SAAD;AAAA,qCAAY,QAAC,IAAD;AAAM,UAAA,EAAE,EAAG,UAASL,KAAK,CAACM,EAAG,EAA7B;AAAA,0BAAkCN,KAAK,CAACK,IAAxC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,UAAD;AAAA,kBACGL,KAAK,IAAIA,KAAK,CAACO,MAAN,CAAaC,GAAb,CAAiBC,KAAK,iBAC9B,QAAC,KAAD;AAAO,UAAA,OAAO,EAAE,MAAMR,YAAY,CAACQ,KAAK,CAACC,IAAN,CAAWJ,EAAZ,EAAgB,MAAhB,CAAlC;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,EAAE,EAAG,SAAQG,KAAK,CAACC,IAAN,CAAWJ,EAAG,EAAjC;AAAA,4BAAsCG,KAAK,CAACC,IAAN,CAAWC,KAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,WAAgEF,KAAK,CAACC,IAAN,CAAWJ,EAA3E;AAAA;AAAA;AAAA;AAAA,gBADQ;AADZ;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,KAAqBN,KAAK,CAACM,EAA3B;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CAlBD;;KAAMP,K;AAoBN,eAAeA,KAAf","sourcesContent":["import { Link } from 'react-router-dom'\r\nimport { AlbumContainer, AlbumCover, AlbumContent, AlbumName, TracksList, Track } from './Album.style'\r\n\r\nconst Album = ({ album, handleSelect }) => {\r\n  console.log(album)\r\n\r\n  return (\r\n    <AlbumContainer key={album.id}>\r\n      <AlbumCover src={album.cover_art_url} alt={album.name} />\r\n      <AlbumContent>\r\n        <AlbumName> <Link to={`/album/${album.id}`}> {album.name} </Link> </AlbumName>\r\n        <TracksList>\r\n          {album && album.tracks.map(track =>\r\n            <Track onClick={() => handleSelect(track.song.id, 'song')} key={track.song.id}>\r\n              <Link to={`/song/${track.song.id}`}> {track.song.title} </Link>\r\n            </Track>\r\n          )}\r\n        </TracksList>\r\n      </AlbumContent>\r\n    </AlbumContainer>\r\n  )\r\n}\r\n\r\nexport default Album"]},"metadata":{},"sourceType":"module"}