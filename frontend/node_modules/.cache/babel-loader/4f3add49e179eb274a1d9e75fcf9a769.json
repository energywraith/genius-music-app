{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\energ\\\\Documents\\\\GitHub\\\\music-app\\\\client\\\\src\\\\components\\\\SearchBar\\\\SearchResults.js\";\nimport { ListContainer, ListItem, Thumbnail } from \"./SearchResults.style\";\nimport placeholderImg from './img/placeholder.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ResultsList = ({\n  results,\n  handleSongSelect,\n  expanded\n}) => {\n  return /*#__PURE__*/_jsxDEV(ListContainer, {\n    expanded: expanded,\n    children: [results.artists.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \" Artists \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 11\n      }, this), results.artists.slice(0, 2).map(artist => /*#__PURE__*/_jsxDEV(ListItem, {\n        children: [/*#__PURE__*/_jsxDEV(Thumbnail, {\n          src: artist.result.header_image_url,\n          onError: e => {\n            e.target.onerror = null;\n            e.target.src = placeholderImg;\n          } // Still returns 404 error if img url is invalid !!!\n          ,\n          alt: `thumbnail`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\" \", artist.result.name, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 15\n        }, this)]\n      }, artist.result.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true), results.songs.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \" Songs \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this), results.songs.map(song => /*#__PURE__*/_jsxDEV(ListItem, {\n        onMouseDown: () => handleSongSelect(song.result.id),\n        children: [/*#__PURE__*/_jsxDEV(Thumbnail, {\n          src: song.result.header_image_thumbnail_url,\n          onError: e => {\n            e.target.onerror = null;\n            e.target.src = placeholderImg;\n          } // Still returns 404 error if img url is invalid !!!\n          ,\n          alt: `thumbnail`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\" \", song.result.full_title, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }, this)]\n      }, song.result.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 15\n      }, this))]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \" Albums \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), results.albums.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: results.albums.slice(0, 2).map(album => /*#__PURE__*/_jsxDEV(ListItem, {\n        onMouseDown: () => handleSongSelect(album.result.id),\n        children: [/*#__PURE__*/_jsxDEV(Thumbnail, {\n          src: album.result.cover_art_thumbnail_url,\n          onError: e => {\n            e.target.onerror = null;\n            e.target.src = placeholderImg;\n          } // Still returns 404 error if img url is invalid !!!\n          ,\n          alt: `thumbnail`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\" \", album.result.full_title, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this)]\n      }, album.result.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 15\n      }, this))\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ResultsList;\nexport default ResultsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResultsList\");","map":{"version":3,"sources":["C:/Users/energ/Documents/GitHub/music-app/client/src/components/SearchBar/SearchResults.js"],"names":["ListContainer","ListItem","Thumbnail","placeholderImg","ResultsList","results","handleSongSelect","expanded","artists","length","slice","map","artist","result","header_image_url","e","target","onerror","src","name","id","songs","song","header_image_thumbnail_url","full_title","albums","album","cover_art_thumbnail_url"],"mappings":"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","sourcesContent":["import { ListContainer, ListItem, Thumbnail } from \"./SearchResults.style\"\r\nimport placeholderImg from './img/placeholder.png'\r\n\r\nconst ResultsList = ({ results, handleSongSelect, expanded }) => {\r\n  return (\r\n    <ListContainer expanded={expanded}>\r\n      {results.artists.length > 0\r\n        && <>\r\n          <h2> Artists </h2>\r\n          {results.artists.slice(0, 2).map(artist => \r\n            <ListItem key={artist.result.id}>\r\n              <Thumbnail \r\n              src={artist.result.header_image_url}\r\n              onError={(e)=> { e.target.onerror = null; e.target.src = placeholderImg }} // Still returns 404 error if img url is invalid !!!\r\n              alt={`thumbnail`} />\r\n              <span> {artist.result.name} </span>\r\n            </ListItem>\r\n          )}\r\n        </>\r\n      }\r\n      {results.songs.length > 0\r\n        && \r\n          <>\r\n            <h2> Songs </h2>\r\n            {results.songs.map(song => \r\n              <ListItem key={song.result.id} onMouseDown={() => handleSongSelect(song.result.id)}>\r\n                <Thumbnail \r\n                src={song.result.header_image_thumbnail_url}\r\n                onError={(e)=> { e.target.onerror = null; e.target.src = placeholderImg }} // Still returns 404 error if img url is invalid !!!\r\n                alt={`thumbnail`} />\r\n                <span> {song.result.full_title} </span>\r\n              </ListItem>\r\n            )}\r\n          </>\r\n      }\r\n      <h2> Albums </h2>\r\n      {results.albums.length > 0\r\n        && \r\n          <>\r\n            {results.albums.slice(0, 2).map(album => \r\n              <ListItem key={album.result.id} onMouseDown={() => handleSongSelect(album.result.id)}>\r\n                <Thumbnail\r\n                src={album.result.cover_art_thumbnail_url}\r\n                onError={(e)=> { e.target.onerror = null; e.target.src = placeholderImg }} // Still returns 404 error if img url is invalid !!!\r\n                alt={`thumbnail`} />\r\n                <span> {album.result.full_title} </span>\r\n              </ListItem>\r\n            )}\r\n          </>\r\n      }\r\n    </ListContainer>\r\n  )\r\n}\r\n\r\nexport default ResultsList"]},"metadata":{},"sourceType":"module"}