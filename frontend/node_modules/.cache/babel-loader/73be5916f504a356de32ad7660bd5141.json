{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\energ\\\\Documents\\\\GitHub\\\\music-app\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport GlobalStyles from './GlobalStyles';\nimport './App.css';\nimport { getSongData, getArtistData } from './services/lyrics';\nimport Loader from './components/Loader';\nimport SearchBar from './components/SearchBar';\nimport SongSection from './components/SongSection';\nimport appLogo from './components/Nav/img/appLogo.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [loadingStatus, setLoadingStatus] = useState(false);\n  const [data, setData] = useState(null); // Have you ever had lyrics of a song stuck in your head that you cant recall the name of?\n\n  const fetchData = async (id, type) => {\n    switch (type) {\n      case 'song':\n        return await getSongData(id);\n\n      case 'artist':\n        return await getArtistData(id);\n\n      default:\n        return null;\n    }\n  };\n\n  const handleDataChange = async (id, type) => {\n    setLoadingStatus(true);\n    setData(await fetchData(id, type));\n    setLoadingStatus(false);\n  };\n\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(AppContainer, {\n    children: [/*#__PURE__*/_jsxDEV(GlobalStyles, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '100%',\n        height: '100%',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        fontSize: '1em',\n        padding: '1em 0',\n        cursor: 'pointer'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: appLogo,\n        alt: \"scuffed spotify\",\n        style: {\n          height: '2em',\n          width: 'auto'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), \" Spotifi\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n      setData: handleDataChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), loadingStatus ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }, this) : data && data._type === 'song' ? /*#__PURE__*/_jsxDEV(SongSection, {\n      details: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }, this) : data._type === 'artist' ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" Artist \", data.name, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \" Album \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"fhbfBmnO5dSm1D4SU4jTbFrQ4hA=\");\n\n_c = App;\nconst AppContainer = styled.div`\n  padding: 0 1em 1em 1em;\n  margin: 0;\n`;\n_c2 = AppContainer;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"AppContainer\");","map":{"version":3,"sources":["C:/Users/energ/Documents/GitHub/music-app/client/src/App.js"],"names":["useState","useEffect","styled","GlobalStyles","getSongData","getArtistData","Loader","SearchBar","SongSection","appLogo","App","loadingStatus","setLoadingStatus","data","setData","fetchData","id","type","handleDataChange","console","log","width","height","display","justifyContent","alignItems","fontSize","padding","cursor","_type","name","AppContainer","div"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAO,WAAP;AAEA,SAASC,WAAT,EAAsBC,aAAtB,QAA2C,mBAA3C;AAEA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AAEA,OAAOC,OAAP,MAAoB,kCAApB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCZ,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACa,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAC,IAAD,CAAhC,CAFa,CAIb;;AAEA,QAAMe,SAAS,GAAG,OAAOC,EAAP,EAAWC,IAAX,KAAoB;AACpC,YAAOA,IAAP;AACE,WAAK,MAAL;AACE,eAAO,MAAMb,WAAW,CAACY,EAAD,CAAxB;;AACF,WAAK,QAAL;AACE,eAAO,MAAMX,aAAa,CAACW,EAAD,CAA1B;;AACF;AACE,eAAO,IAAP;AANJ;AAQD,GATD;;AAWA,QAAME,gBAAgB,GAAG,OAAOF,EAAP,EAAWC,IAAX,KAAoB;AAC3CL,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACAE,IAAAA,OAAO,CAAC,MAAMC,SAAS,CAACC,EAAD,EAAKC,IAAL,CAAhB,CAAP;AACAL,IAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACD,GAJD;;AAMAO,EAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AAEA,sBACE,QAAC,YAAD;AAAA,4BACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AACA,MAAA,KAAK,EAAE;AAAEQ,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,MAAM,EAAE,MAAzB;AAAiCC,QAAAA,OAAO,EAAE,MAA1C;AAAkDC,QAAAA,cAAc,EAAE,QAAlE;AAA4EC,QAAAA,UAAU,EAAE,QAAxF;AAAkGC,QAAAA,QAAQ,EAAE,KAA5G;AAAmHC,QAAAA,OAAO,EAAE,OAA5H;AAAqIC,QAAAA,MAAM,EAAE;AAA7I,OADP;AAAA,8BAEE;AAAK,QAAA,GAAG,EAAEnB,OAAV;AAAmB,QAAA,GAAG,EAAC,iBAAvB;AAAyC,QAAA,KAAK,EAAE;AAAEa,UAAAA,MAAM,EAAE,KAAV;AAAiBD,UAAAA,KAAK,EAAE;AAAxB;AAAhD;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAME,QAAC,SAAD;AAAW,MAAA,OAAO,EAAEH;AAApB;AAAA;AAAA;AAAA;AAAA,YANF,EAOGP,aAAa,gBACV,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADU,GAEVE,IAAI,IACJA,IAAI,CAACgB,KAAL,KAAe,MADf,gBAEI,QAAC,WAAD;AAAa,MAAA,OAAO,EAAEhB;AAAtB;AAAA;AAAA;AAAA;AAAA,YAFJ,GAGIA,IAAI,CAACgB,KAAL,KAAe,QAAf,gBACE;AAAA,6BAAchB,IAAI,CAACiB,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,gBAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAdZ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD;;GApDQpB,G;;KAAAA,G;AAsDT,MAAMqB,YAAY,GAAG7B,MAAM,CAAC8B,GAAI;AAChC;AACA;AACA,CAHA;MAAMD,Y;AAKN,eAAerB,GAAf","sourcesContent":["import { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport GlobalStyles from './GlobalStyles'\nimport './App.css'\n\nimport { getSongData, getArtistData } from './services/lyrics'\n\nimport Loader from './components/Loader'\nimport SearchBar from './components/SearchBar'\nimport SongSection from './components/SongSection'\n\nimport appLogo from './components/Nav/img/appLogo.png'\n\nfunction App() {\n  const [loadingStatus, setLoadingStatus] = useState(false)\n  const [data, setData] = useState(null)\n\n  // Have you ever had lyrics of a song stuck in your head that you cant recall the name of?\n\n  const fetchData = async (id, type) => {\n    switch(type) {\n      case 'song':\n        return await getSongData(id)\n      case 'artist':\n        return await getArtistData(id)\n      default:\n        return null\n    }\n  }\n\n  const handleDataChange = async (id, type) => {\n    setLoadingStatus(true)\n    setData(await fetchData(id, type))\n    setLoadingStatus(false)\n  }\n\n  console.log(data)\n\n  return (\n    <AppContainer>\n      <GlobalStyles />\n      <div\n      style={{ width: '100%', height: '100%', display: 'flex', justifyContent: 'center', alignItems: 'center', fontSize: '1em', padding: '1em 0', cursor: 'pointer' }}>\n        <img src={appLogo} alt='scuffed spotify' style={{ height: '2em', width: 'auto' }}/> Spotifi\n      </div>\n      <SearchBar setData={handleDataChange} />\n      {loadingStatus\n        ? <Loader />\n        : data &&\n          data._type === 'song'\n            ? <SongSection details={data} />\n            : data._type === 'artist'\n              ? <div> Artist {data.name} </div>\n              : <div> Album </div>\n      }\n      {/* {loadingStatus\n        ? <Loader />\n        : selectedArtistData &&\n          <div>\n            <p> {selectedArtistData.artist.name} </p>\n            <p> {selectedArtistData.artist.description_preview} </p>\n          </div>\n      } */}\n    </AppContainer>\n  )\n}\n\nconst AppContainer = styled.div`\n  padding: 0 1em 1em 1em;\n  margin: 0;\n`\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}