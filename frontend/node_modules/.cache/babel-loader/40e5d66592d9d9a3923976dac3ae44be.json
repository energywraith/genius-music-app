{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\energ\\\\Documents\\\\GitHub\\\\music-app\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport './App.css';\nimport styled from 'styled-components';\nimport { search } from './services/lyrics';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [result, setResult] = useState(null);\n  const [searchInputValue, setSearchInputValue] = useState('');\n  useEffect(() => {\n    async function fetchMyAPI() {\n      if (searchInputValue.length > 0) {\n        let response = await search(searchInputValue);\n        setResult(response.sections[0].hits);\n      }\n    } // Timeout set to avoid overlapping requests\n\n\n    const timeoutId = setTimeout(() => fetchMyAPI(), 300);\n    return () => clearTimeout(timeoutId);\n  }, [searchInputValue]);\n  return /*#__PURE__*/_jsxDEV(AppContainer, {\n    children: /*#__PURE__*/_jsxDEV(SearchBar, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Input a song\",\n        value: searchInputValue,\n        onChange: ({\n          target\n        }) => setSearchInputValue(target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: result && result.map(artist => artist.result.name)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"bVWQ8VcstmBDXsyETuqvkvddggE=\");\n\n_c = App;\nconst AppContainer = styled.div`\n  padding: 0;\n  margin: 0;\n`;\n_c2 = AppContainer;\nconst SearchBar = styled.div`\n  & > input {\n    width: 100%;\n    height: 1em;\n    font-size: 1em;\n    padding: 1em 0.2em;\n    box-sizing: border-box;\n  }\n\n  & > ul {\n    display: grid;\n    grid-template-columns: 1fr;\n\n    & > li {\n      display: grid;\n      grid-template-columns: auto 1fr;\n      align-items: center;\n      column-gap: 1em;\n      box-shadow: 0px 0px 1px black;\n      padding: 1em;\n\n      & > img {\n        height: 3em;\n        width: 3em;\n      }\n    }\n  }\n`;\n_c3 = SearchBar;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"AppContainer\");\n$RefreshReg$(_c3, \"SearchBar\");","map":{"version":3,"sources":["C:/Users/energ/Documents/GitHub/music-app/client/src/App.js"],"names":["useState","useEffect","styled","search","App","result","setResult","searchInputValue","setSearchInputValue","fetchMyAPI","length","response","sections","hits","timeoutId","setTimeout","clearTimeout","target","value","map","artist","name","AppContainer","div","SearchBar"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SAASC,MAAT,QAAuB,mBAAvB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAACO,gBAAD,EAAmBC,mBAAnB,IAA0CR,QAAQ,CAAC,EAAD,CAAxD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeQ,UAAf,GAA4B;AAC1B,UAAGF,gBAAgB,CAACG,MAAjB,GAA0B,CAA7B,EAAgC;AAC9B,YAAIC,QAAQ,GAAG,MAAMR,MAAM,CAACI,gBAAD,CAA3B;AACAD,QAAAA,SAAS,CAACK,QAAQ,CAACC,QAAT,CAAkB,CAAlB,EAAqBC,IAAtB,CAAT;AACD;AACF,KANa,CAQd;;;AACA,UAAMC,SAAS,GAAGC,UAAU,CAAC,MAAMN,UAAU,EAAjB,EAAqB,GAArB,CAA5B;AACA,WAAO,MAAMO,YAAY,CAACF,SAAD,CAAzB;AACD,GAXQ,EAWN,CAACP,gBAAD,CAXM,CAAT;AAaA,sBACE,QAAC,YAAD;AAAA,2BACE,QAAC,SAAD;AAAA,8BACE;AACA,QAAA,WAAW,EAAC,cADZ;AAEA,QAAA,KAAK,EAAEA,gBAFP;AAGA,QAAA,QAAQ,EAAE,CAAC;AAACU,UAAAA;AAAD,SAAD,KAAcT,mBAAmB,CAACS,MAAM,CAACC,KAAR;AAH3C;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAA,kBAUGb,MAAM,IACFA,MAAM,CAACc,GAAP,CAAWC,MAAM,IAAIA,MAAM,CAACf,MAAP,CAAcgB,IAAnC;AAXP;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD;;GAzCQjB,G;;KAAAA,G;AA2CT,MAAMkB,YAAY,GAAGpB,MAAM,CAACqB,GAAI;AAChC;AACA;AACA,CAHA;MAAMD,Y;AAKN,MAAME,SAAS,GAAGtB,MAAM,CAACqB,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA3BA;MAAMC,S;AA6BN,eAAepB,GAAf","sourcesContent":["import { useState, useEffect } from 'react'\nimport './App.css'\nimport styled from 'styled-components'\n\nimport { search } from './services/lyrics'\n\nfunction App() {\n  const [result, setResult] = useState(null)\n  const [searchInputValue, setSearchInputValue] = useState('')\n\n  useEffect(() => {\n    async function fetchMyAPI() {\n      if(searchInputValue.length > 0) {\n        let response = await search(searchInputValue)\n        setResult(response.sections[0].hits)\n      }\n    }\n\n    // Timeout set to avoid overlapping requests\n    const timeoutId = setTimeout(() => fetchMyAPI(), 300)\n    return () => clearTimeout(timeoutId)\n  }, [searchInputValue])\n\n  return (\n    <AppContainer>\n      <SearchBar>\n        <input\n        placeholder=\"Input a song\"\n        value={searchInputValue} \n        onChange={({target}) => setSearchInputValue(target.value)} />\n        <ul>\n          {/* {result \n            ? result.map(song => \n                <li key={song.result.id}>\n                  <img src={song.result.header_image_thumbnail_url} alt={`${song.result.full_title} thumbnail`} />\n                  <span> {song.result.full_title} </span>\n                </li>\n              )\n            : <div> Loading... </div>\n          } */}\n          {result\n            && result.map(artist => artist.result.name)\n          }\n        </ul>\n      </SearchBar>\n    </AppContainer>\n  )\n}\n\nconst AppContainer = styled.div`\n  padding: 0;\n  margin: 0;\n`\n\nconst SearchBar = styled.div`\n  & > input {\n    width: 100%;\n    height: 1em;\n    font-size: 1em;\n    padding: 1em 0.2em;\n    box-sizing: border-box;\n  }\n\n  & > ul {\n    display: grid;\n    grid-template-columns: 1fr;\n\n    & > li {\n      display: grid;\n      grid-template-columns: auto 1fr;\n      align-items: center;\n      column-gap: 1em;\n      box-shadow: 0px 0px 1px black;\n      padding: 1em;\n\n      & > img {\n        height: 3em;\n        width: 3em;\n      }\n    }\n  }\n`\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}