{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\energ\\\\Documents\\\\GitHub\\\\music-app\\\\client\\\\src\\\\components\\\\SectionArtist\\\\Album.js\";\nimport { Link } from 'react-router-dom';\nimport { AlbumContainer, AlbumCover, AlbumContent, AlbumName, TracksList, Track } from './Album.style';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Album = ({\n  album,\n  className\n}) => {\n  return /*#__PURE__*/_jsxDEV(AlbumContainer, {\n    className: className,\n    children: [/*#__PURE__*/_jsxDEV(AlbumCover, {\n      src: album.cover_art_url,\n      alt: album.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AlbumContent, {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: `/album/${album.id}`,\n        children: /*#__PURE__*/_jsxDEV(AlbumName, {\n          children: [\" \", album.name, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TracksList, {\n        children: [album && album.tracks.slice(0, 5).map(track => /*#__PURE__*/_jsxDEV(Track, {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/song/${track.song.id}`,\n            children: [\" \", track.song.title, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 15\n          }, this)\n        }, track.song.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 13\n        }, this)), album.tracks.length - 5 > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/album/${album.id}`,\n            children: [\"and \", album.tracks.length - 5, \" other tracks\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)]\n  }, album.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Album;\nexport default Album;\n\nvar _c;\n\n$RefreshReg$(_c, \"Album\");","map":{"version":3,"sources":["C:/Users/energ/Documents/GitHub/music-app/client/src/components/SectionArtist/Album.js"],"names":["Link","AlbumContainer","AlbumCover","AlbumContent","AlbumName","TracksList","Track","Album","album","className","cover_art_url","name","id","tracks","slice","map","track","song","title","length"],"mappings":";AAAA,SAASA,IAAT,QAAqB,kBAArB;AACA,SAASC,cAAT,EAAyBC,UAAzB,EAAqCC,YAArC,EAAmDC,SAAnD,EAA8DC,UAA9D,EAA0EC,KAA1E,QAAuF,eAAvF;;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAA0B;AACtC,sBACE,QAAC,cAAD;AAA+B,IAAA,SAAS,EAAEA,SAA1C;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,GAAG,EAAED,KAAK,CAACE,aAAvB;AAAsC,MAAA,GAAG,EAAEF,KAAK,CAACG;AAAjD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,YAAD;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAG,UAASH,KAAK,CAACI,EAAG,EAA7B;AAAA,+BACE,QAAC,SAAD;AAAA,0BAAaJ,KAAK,CAACG,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,UAAD;AAAA,mBACGH,KAAK,IAAIA,KAAK,CAACK,MAAN,CAAaC,KAAb,CAAmB,CAAnB,EAAsB,CAAtB,EAAyBC,GAAzB,CAA6BC,KAAK,iBAC1C,QAAC,KAAD;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,EAAE,EAAG,SAAQA,KAAK,CAACC,IAAN,CAAWL,EAAG,EAAjC;AAAA,4BAAsCI,KAAK,CAACC,IAAN,CAAWC,KAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,WAAYF,KAAK,CAACC,IAAN,CAAWL,EAAvB;AAAA;AAAA;AAAA;AAAA,gBADQ,CADZ,EAMGJ,KAAK,CAACK,MAAN,CAAaM,MAAb,GAAsB,CAAtB,GAA0B,CAA1B,iBACC;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,EAAE,EAAG,UAASX,KAAK,CAACI,EAAG,EAA7B;AAAA,+BACOJ,KAAK,CAACK,MAAN,CAAaM,MAAb,GAAsB,CAD7B;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,KAAqBX,KAAK,CAACI,EAA3B;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD,CAzBD;;KAAML,K;AA2BN,eAAeA,KAAf","sourcesContent":["import { Link } from 'react-router-dom'\r\nimport { AlbumContainer, AlbumCover, AlbumContent, AlbumName, TracksList, Track } from './Album.style'\r\n\r\nconst Album = ({ album, className }) => {\r\n  return (\r\n    <AlbumContainer key={album.id} className={className}>\r\n      <AlbumCover src={album.cover_art_url} alt={album.name} />\r\n      <AlbumContent>\r\n        <Link to={`/album/${album.id}`}>\r\n          <AlbumName> {album.name} </AlbumName>\r\n        </Link>\r\n        <TracksList>\r\n          {album && album.tracks.slice(0, 5).map(track =>\r\n            <Track key={track.song.id}>\r\n              <Link to={`/song/${track.song.id}`}> {track.song.title} </Link>\r\n            </Track>\r\n          )}\r\n          {album.tracks.length - 5 > 0 &&\r\n            <span>\r\n              <Link to={`/album/${album.id}`}>\r\n                and {album.tracks.length - 5} other tracks\r\n              </Link>\r\n            </span>\r\n          }\r\n        </TracksList>\r\n      </AlbumContent>\r\n    </AlbumContainer>\r\n  )\r\n}\r\n\r\nexport default Album"]},"metadata":{},"sourceType":"module"}