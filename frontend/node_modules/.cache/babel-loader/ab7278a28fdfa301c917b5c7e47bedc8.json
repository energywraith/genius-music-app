{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\energ\\\\Documents\\\\GitHub\\\\music-app\\\\client\\\\src\\\\components\\\\SectionSong\\\\index.js\";\nimport { Link } from 'react-router-dom';\nimport YoutubeEmbed from './YoutubeEmbed';\nimport Loader from '../Loader';\nimport Album from '../SectionArtist/Album';\nimport { Container, Name, Lyrics, Details, Artist, DescriptionStyled, CoverImage, MediaLinks } from './index.style';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SectionSong = ({\n  details,\n  handleSelect\n}) => {\n  console.log(details);\n  return details && details._type === 'song' ? /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Name, {\n        children: [\" \", details.full_title, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Lyrics, {\n        dangerouslySetInnerHTML: {\n          __html: details.lyrics.replaceAll(\"[\", \"<span>[\").replaceAll(\"]\", \"]</span>\")\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 7\n  }, this) : /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 7\n  }, this);\n};\n\n_c = SectionSong;\nexport default SectionSong;\n\nvar _c;\n\n$RefreshReg$(_c, \"SectionSong\");","map":{"version":3,"sources":["C:/Users/energ/Documents/GitHub/music-app/client/src/components/SectionSong/index.js"],"names":["Link","YoutubeEmbed","Loader","Album","Container","Name","Lyrics","Details","Artist","DescriptionStyled","CoverImage","MediaLinks","SectionSong","details","handleSelect","console","log","_type","full_title","__html","lyrics","replaceAll"],"mappings":";AAAA,SAASA,IAAT,QAAqB,kBAArB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,SACEC,SADF,EAEEC,IAFF,EAGEC,MAHF,EAIEC,OAJF,EAKEC,MALF,EAMEC,iBANF,EAOEC,UAPF,EAQEC,UARF,QASO,eATP;;;AAWA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAD,KAA+B;AACjDC,EAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AAEA,SAAOA,OAAO,IAAIA,OAAO,CAACI,KAAR,KAAkB,MAA7B,gBACH,QAAC,SAAD;AAAA,2BACE;AAAA,8BACE,QAAC,IAAD;AAAA,wBAAQJ,OAAO,CAACK,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD;AAAQ,QAAA,uBAAuB,EAAE;AAAEC,UAAAA,MAAM,EAAEN,OAAO,CAACO,MAAR,CAAeC,UAAf,CAA0B,GAA1B,EAA+B,SAA/B,EAA0CA,UAA1C,CAAqD,GAArD,EAA0D,UAA1D;AAAV;AAAjC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADG,gBA4BH,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,UA5BJ;AA6BD,CAhCD;;KAAMT,W;AAkCN,eAAeA,WAAf","sourcesContent":["import { Link } from 'react-router-dom'\r\nimport YoutubeEmbed from './YoutubeEmbed'\r\nimport Loader from '../Loader'\r\nimport Album from '../SectionArtist/Album'\r\nimport { \r\n  Container,\r\n  Name,\r\n  Lyrics,\r\n  Details,\r\n  Artist,\r\n  DescriptionStyled,\r\n  CoverImage,\r\n  MediaLinks\r\n} from './index.style'\r\n\r\nconst SectionSong = ({ details, handleSelect }) => {\r\n  console.log(details)\r\n\r\n  return details && details._type === 'song'\r\n    ? <Container>\r\n        <div>\r\n          <Name> {details.full_title} </Name>\r\n          <Lyrics dangerouslySetInnerHTML={{ __html: details.lyrics.replaceAll(\"[\", \"<span>[\").replaceAll(\"]\", \"]</span>\") }} />\r\n        </div>\r\n\r\n        {/* <Details>\r\n          <Link to={`/artist/${details.primary_artist.id}`}>\r\n            <Artist> {details.primary_artist.name} </Artist>\r\n          </Link>\r\n          <div style={{ display: 'flex', columnGap: '1em' }}>\r\n            <CoverImage src={details.header_image_url} alt=\"Song cover\" />\r\n            <DescriptionStyled content={details.description_preview}/>\r\n          </div>\r\n          {details.youtube_url && <YoutubeEmbed url={details.youtube_url} />}\r\n          <MediaLinks>\r\n            {details.media.map(media => \r\n              <li key={media.provider}>\r\n                <a href={media.url} rel=\"noopener noreferrer\">\r\n                  {media.provider}\r\n                </a>\r\n              </li>\r\n            )}\r\n          </MediaLinks>\r\n          <Album album={details.album} handleSelect={handleSelect} />\r\n        </Details> */}\r\n      </Container>\r\n    : <Loader />\r\n}\r\n\r\nexport default SectionSong"]},"metadata":{},"sourceType":"module"}