{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\energ\\\\Documents\\\\GitHub\\\\music-app\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { Switch, Route, Link } from 'react-router-dom';\nimport { useLocation, useHistory } from 'react-router';\nimport styled from 'styled-components';\nimport GlobalStyles from './GlobalStyles';\nimport './App.css';\nimport { getSongData, getArtistData, getRandomSongs } from './services/lyrics';\nimport SectionHome from './components/SectionHome';\nimport SearchBar from './components/SearchBar';\nimport SectionSong from './components/SectionSong';\nimport SectionArtist from './components/SectionArtist';\nimport appLogo from './components/Nav/img/appLogo.png';\nimport NotFound from './components/NotFound';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [data, setData] = useState(null);\n  const [randomSongs, setRandomSongs] = useState(null);\n  const location = useLocation();\n  const history = useHistory(); // Have you ever had lyrics of a song stuck in your head that you cant recall the name of?\n\n  const fetchData = async (id, type) => {\n    switch (type) {\n      case 'song':\n        return await getSongData(id);\n\n      case 'artist':\n        return await getArtistData(id);\n\n      default:\n        return null;\n    }\n  };\n\n  const handleDataChange = async (id, type) => {\n    setData(null);\n    history.push(`/${type}/${id}`);\n  };\n\n  useEffect(() => {\n    const handleFetchData = async () => {\n      try {\n        setRandomSongs(await getRandomSongs(2));\n      } catch (error) {}\n    };\n\n    handleFetchData();\n  }, []);\n  useEffect(() => {\n    const handleFetchData = async () => {\n      const [, id, path] = location.pathname.split('/');\n\n      try {\n        setData(await fetchData(path, id));\n      } catch (error) {\n        setData({\n          _type: 'error',\n          content: '404'\n        });\n      }\n    };\n\n    handleFetchData();\n  }, [location]);\n  return /*#__PURE__*/_jsxDEV(AppContainer, {\n    children: [/*#__PURE__*/_jsxDEV(GlobalStyles, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AppLogo, {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: appLogo,\n          alt: \"scuffed spotify\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), \" Spotifi\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n      setData: handleDataChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/artist/\",\n        children: data && data._type !== 'error' ? /*#__PURE__*/_jsxDEV(SectionArtist, {\n          details: data,\n          handleSelect: handleDataChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(NotFound, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/song/\",\n        children: /*#__PURE__*/_jsxDEV(SectionSong, {\n          details: data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        children: /*#__PURE__*/_jsxDEV(SectionHome, {\n          randomSongs: randomSongs,\n          handleSongSelect: handleDataChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"XmOkJP/KraOwCDCzkbhweq4bFM0=\", false, function () {\n  return [useLocation, useHistory];\n});\n\n_c = App;\nconst AppContainer = styled.div`\n  padding: 0 1em 1em 1em;\n  margin: 0;\n`;\n_c2 = AppContainer;\nconst AppLogo = styled.nav`\n  width: 100%;\n  cursor: pointer;\n  \n  & > a {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    column-gap: 0.2em;\n    color: white;\n    padding: 1em 0;\n\n    & > img {\n      height: 2em;\n      width: auto;\n    }\n  }\n`;\n_c3 = AppLogo;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"AppContainer\");\n$RefreshReg$(_c3, \"AppLogo\");","map":{"version":3,"sources":["C:/Users/energ/Documents/GitHub/music-app/client/src/App.js"],"names":["useEffect","useState","Switch","Route","Link","useLocation","useHistory","styled","GlobalStyles","getSongData","getArtistData","getRandomSongs","SectionHome","SearchBar","SectionSong","SectionArtist","appLogo","NotFound","App","data","setData","randomSongs","setRandomSongs","location","history","fetchData","id","type","handleDataChange","push","handleFetchData","error","path","pathname","split","_type","content","AppContainer","div","AppLogo","nav"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react'\nimport { Switch, Route, Link } from 'react-router-dom'\nimport { useLocation, useHistory } from 'react-router'\nimport styled from 'styled-components'\nimport GlobalStyles from './GlobalStyles'\nimport './App.css'\n\nimport { getSongData, getArtistData, getRandomSongs } from './services/lyrics'\n\nimport SectionHome from './components/SectionHome'\nimport SearchBar from './components/SearchBar'\nimport SectionSong from './components/SectionSong'\nimport SectionArtist from './components/SectionArtist'\nimport appLogo from './components/Nav/img/appLogo.png'\nimport NotFound from './components/NotFound'\n\nconst App = () => {\n  const [data, setData] = useState(null)\n  const [randomSongs, setRandomSongs] = useState(null)\n  const location = useLocation()\n  const history = useHistory()\n\n  // Have you ever had lyrics of a song stuck in your head that you cant recall the name of?\n  const fetchData = async (id, type) => {\n    switch(type) {\n      case 'song':\n        return await getSongData(id)\n      case 'artist':\n        return await getArtistData(id)\n      default:\n        return null\n    }\n  }\n\n  const handleDataChange = async (id, type) => {\n    setData(null)\n    history.push(`/${type}/${id}`)\n  }\n\n  useEffect(() => {\n    const handleFetchData = async () => {\n      try {\n        setRandomSongs(await getRandomSongs(2))\n      } catch (error) {}\n    }\n    \n    handleFetchData()\n  }, [])\n  \n  useEffect(() => {\n    const handleFetchData = async () => {\n      const [, id, path] = location.pathname.split('/')\n\n      try {\n        setData(await fetchData(path, id))\n      } catch (error) {\n        setData({ _type: 'error', content: '404' })\n      }\n    }\n\n    handleFetchData()\n  }, [location])\n\n\n  return (\n    <AppContainer>\n      <GlobalStyles />\n      <AppLogo>\n        <Link to='/'>\n          <img src={appLogo} alt='scuffed spotify' /> Spotifi\n        </Link>\n      </AppLogo>\n      <SearchBar setData={handleDataChange} />\n      <Switch>\n        <Route path='/artist/'>\n          {data && data._type !== 'error' \n            ? <SectionArtist details={data} handleSelect={handleDataChange} />\n            : <NotFound />\n          }\n        </Route>\n        <Route path='/song/'>\n          <SectionSong details={data} />\n        </Route>\n        <Route path='/'>\n          <SectionHome randomSongs={randomSongs} handleSongSelect={handleDataChange} />\n        </Route>\n      </Switch>\n    </AppContainer>\n  )\n}\n\nconst AppContainer = styled.div`\n  padding: 0 1em 1em 1em;\n  margin: 0;\n`\n\nconst AppLogo = styled.nav`\n  width: 100%;\n  cursor: pointer;\n  \n  & > a {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    column-gap: 0.2em;\n    color: white;\n    padding: 1em 0;\n\n    & > img {\n      height: 2em;\n      width: auto;\n    }\n  }\n`\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}